{
  "metadata": {
    "version": "1.0.0",
    "generatedAt": "2025-07-11T01:55:16.410Z",
    "totalComponents": 125,
    "categories": {
      "Auth": {
        "name": "Auth",
        "description": "Authentication, authorization, and user session management components",
        "count": 12,
        "color": "#059669",
        "icon": "üîê"
      },
      "Cursors": {
        "name": "Cursors",
        "description": "Custom cursor effects, animations, and interactive cursor components",
        "count": 5,
        "color": "#c026d3",
        "icon": "üñ±Ô∏è"
      },
      "Form": {
        "name": "Form",
        "description": "Form components",
        "count": 15,
        "color": "#6b7280",
        "icon": "üîß"
      },
      "Forms": {
        "name": "Forms",
        "description": "Form inputs, validation, and interactive form components for building user interfaces",
        "count": 37,
        "color": "#4f46e5",
        "icon": "üìù"
      },
      "Library": {
        "name": "Library",
        "description": "Utility components, helpers, and third-party library integrations",
        "count": 1,
        "color": "#374151",
        "icon": "üìö"
      },
      "Navbar": {
        "name": "Navbar",
        "description": "Navigation, menus, breadcrumbs, and header components for site navigation",
        "count": 6,
        "color": "#7c3aed",
        "icon": "üß≠"
      },
      "Status": {
        "name": "Status",
        "description": "Status indicators, error states, loading states, and user feedback components",
        "count": 11,
        "color": "#dc2626",
        "icon": "‚ö†Ô∏è"
      },
      "Tabs": {
        "name": "Tabs",
        "description": "Tab navigation and tabbed interface components for organizing content",
        "count": 3,
        "color": "#0891b2",
        "icon": "üìë"
      },
      "Theme": {
        "name": "Theme",
        "description": "Theme providers, dark mode toggles, and styling utility components",
        "count": 6,
        "color": "#7c2d12",
        "icon": "üåô"
      },
      "UI": {
        "name": "UI",
        "description": "General UI components including cards, buttons, modals, tables, and layout elements",
        "count": 29,
        "color": "#2563eb",
        "icon": "üé®"
      }
    },
    "statistics": {
      "byType": {
        "component": 114,
        "hook": 5,
        "context": 6,
        "utility": 0
      },
      "byComplexity": {
        "low": 92,
        "medium": 27,
        "high": 6
      },
      "withTests": 0,
      "withAccessibility": 31
    }
  },
  "components": [
    {
      "name": "ActionDropdown",
      "description": "Dropdown component for actions",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/ActionDropdown.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ActionDropdown",
          "code": "import React from 'react';\nimport { ActionDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ActionDropdown />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "DropFile"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "AnimatedBox",
      "description": "Animated container component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/AnimatedBox.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 1",
          "description": "Usage example for AnimatedBox",
          "code": "import { AnimatedBox } from \"../../../../index\";\r\n\r\nconst AnimatedBoxExample: React.FC = () => {\r\n  return <AnimatedBox />;\r\n};\r\n\r\nexport default AnimatedBoxExample;\r\n",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "DropFile"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "PasswordField",
      "description": "Secure password input field",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/PasswordField.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of PasswordField",
          "code": "import React from 'react';\nimport { PasswordField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PasswordField />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "DateInput",
        "DateTimeInput",
        "DropFile"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DateInput",
      "description": "Date selection input field",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/DateInput.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DateInput",
          "code": "import React from 'react';\nimport { DateInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DateInput />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateTimeInput",
        "DropFile"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DateTimeInput",
      "description": "Date and time selection input field",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/DateTimeInput.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DateTimeInput",
          "code": "import React from 'react';\nimport { DateTimeInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DateTimeInput />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DropFile"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DropFile",
      "description": "File drag and drop component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/DropFile.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DropFile",
          "code": "import React from 'react';\nimport { DropFile } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DropFile />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "EmailList",
      "description": "Email list display component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/EmailList.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of EmailList",
          "code": "import React from 'react';\nimport { EmailList } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <EmailList />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FilterArray",
      "description": "Array filtering component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/FilterArray.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FilterArray",
          "code": "import React from 'react';\nimport { FilterArray } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FilterArray />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FilterBy",
      "description": "Filtering component with criteria",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/FilterBy.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FilterBy",
          "code": "import React from 'react';\nimport { FilterBy } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FilterBy />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FilterObjects",
      "description": "Object filtering component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/FilterObjects.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FilterObjects",
          "code": "import React from 'react';\nimport { FilterObjects } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FilterObjects />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FormError",
      "description": "Form error display component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/FormError.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FormError",
          "code": "import React from 'react';\nimport { FormError } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FormError />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "HandleError",
      "description": "Error handling component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/HandleError.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of HandleError",
          "code": "import React from 'react';\nimport { HandleError } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <HandleError />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Logout",
      "description": "Logout functionality component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/Logout.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Logout",
          "code": "import React from 'react';\nimport { Logout } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Logout />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MessageDisplay",
      "description": "Message display component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/MessageDisplay.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MessageDisplay",
          "code": "import React from 'react';\nimport { MessageDisplay } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MessageDisplay />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MultipleEmail",
      "description": "Multiple email input component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/MultipleEmail.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MultipleEmail",
          "code": "import React from 'react';\nimport { MultipleEmail } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MultipleEmail />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "PageLoading",
      "description": "Page loading indicator component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/PageLoading.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of PageLoading",
          "code": "import React from 'react';\nimport { PageLoading } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PageLoading />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "PhoneNumberInput",
      "description": "Phone number input with formatting",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/PhoneNumberInput.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of PhoneNumberInput",
          "code": "import React from 'react';\nimport { PhoneNumberInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PhoneNumberInput />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "RadioField",
      "description": "Radio button input field",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/RadioField.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of RadioField",
          "code": "import React from 'react';\nimport { RadioField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioField />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "RadioSimple",
      "description": "Simplified radio button component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/RadioSimple.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of RadioSimple",
          "code": "import React from 'react';\nimport { RadioSimple } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioSimple />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ReactTimeAgo",
      "description": "Time ago display component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/ReactTimeAgo.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ReactTimeAgo",
          "code": "import React from 'react';\nimport { ReactTimeAgo } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReactTimeAgo />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ReadTermsAndCondition",
      "description": "Terms and conditions acceptance component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/ReadTermsAndCondition.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ReadTermsAndCondition",
          "code": "import React from 'react';\nimport { ReadTermsAndCondition } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReadTermsAndCondition />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SearchField",
      "description": "Search input field component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/SearchField.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SearchField",
          "code": "import React from 'react';\nimport { SearchField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SearchField />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SearchFieldDB",
      "description": "Database search field component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/SearchFieldDB.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SearchFieldDB",
          "code": "import React from 'react';\nimport { SearchFieldDB } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SearchFieldDB />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "StepProgressBar",
      "description": "Step progress indicator component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/StepProgressBar.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of StepProgressBar",
          "code": "import React from 'react';\nimport { StepProgressBar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <StepProgressBar />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SubmitButton",
      "description": "Form submission button component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/SubmitButton.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "button",
        "action"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SubmitButton",
          "code": "import React from 'react';\nimport { SubmitButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SubmitButton />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "user-actions",
        "event-handling",
        "form-submission"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Tables",
      "description": "Table display component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/Tables.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "table",
        "data"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Tables",
          "code": "import React from 'react';\nimport { Tables } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Tables />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "data-display",
        "sorting",
        "pagination"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/tables.css"
      ],
      "performance": {
        "renderComplexity": "high",
        "memoryUsage": "medium",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "TextArea",
      "description": "Multi-line text input component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/TextArea.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of TextArea",
          "code": "import React from 'react';\nimport { TextArea } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TextArea />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "TextField",
      "description": "Text input field component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/TextField.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 1",
          "description": "Usage example for TextField",
          "code": "// Example usage of the TextField component\r\n\r\nimport React, { useState } from \"react\";\r\nimport { TextField } from \"../../../../index\";\r\n\r\nconst TextFieldExample: React.FC = () => {\r\n  const [objectsList, setObjectsList] = useState([\r\n    { school_name: \"Harvard University\" },\r\n    { school_name: \"Stanford University\" },\r\n  ]);\r\n\r\n  // Handle change for array props\r\n  const handleChange = (propsArray: [number, string], value: string) => {\r\n    // Updated record object key based on passed index and name.\r\n    const [recordIndex, name] = propsArray;\r\n    const updatedList = objectsList.map((item, i) =>\r\n      i === recordIndex ? { ...item, [name]: value } : item\r\n    );\r\n    setObjectsList(updatedList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Text Fields</h2>\r\n\r\n      {objectsList.map((option, index) => (\r\n        <div key={index}>\r\n          <h3>School {index + 1}</h3>\r\n          <TextField\r\n            name={`school_name_${index}`}\r\n            type=\"text\"\r\n            label=\"High School Name *\"\r\n            required={true}\r\n            defaultValue={option.school_name}\r\n            arrayProps={[index, \"school_name\"]}\r\n            setArrayProps={handleChange}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      <pre>{JSON.stringify(objectsList, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextFieldExample;\r\n",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Tooltip",
      "description": "Tooltip display component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/Tooltip.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Tooltip",
          "code": "import React from 'react';\nimport { Tooltip } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Tooltip />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "UnsplashRandomImage",
      "description": "Random image from Unsplash component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/UnsplashRandomImage.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of UnsplashRandomImage",
          "code": "import React from 'react';\nimport { UnsplashRandomImage } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <UnsplashRandomImage />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DownloadAsExcel",
      "description": "Excel download functionality component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/DownloadAsExcel.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DownloadAsExcel",
          "code": "import React from 'react';\nimport { DownloadAsExcel } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DownloadAsExcel />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "THeadSortBtn",
      "description": "Table header sort button component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/THeadSortBtn.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of THeadSortBtn",
          "code": "import React from 'react';\nimport { THeadSortBtn } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <THeadSortBtn />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "THeadSortList",
      "description": "Table header sort list component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/THeadSortList.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of THeadSortList",
          "code": "import React from 'react';\nimport { THeadSortList } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <THeadSortList />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "TBodyNoData",
      "description": "Table body empty state component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/TBodyNoData.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of TBodyNoData",
          "code": "import React from 'react';\nimport { TBodyNoData } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TBodyNoData />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FileUploader",
      "description": "File upload component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/uploads/FileUploader.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FileUploader",
          "code": "import React from 'react';\nimport { FileUploader } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FileUploader />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "IhubFileUploader",
      "description": "InstinctHub file upload component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/uploads/IhubFileUploader.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of IhubFileUploader",
          "code": "import React from 'react';\nimport { IhubFileUploader } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IhubFileUploader />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ActionCallbackDropdown",
      "description": "Action callback dropdown component",
      "category": "Forms",
      "type": "component",
      "filePath": "src/components/forms/ActionCallbackDropdown.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "forms"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ActionCallbackDropdown",
          "code": "import React from 'react';\nimport { ActionCallbackDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ActionCallbackDropdown />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/forms-index.css",
        "forms/input-fields.css",
        "forms/submit-btn.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InputNumber",
      "description": "InputNumber component for numerical input",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/InputNumber.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InputNumber",
          "code": "import React from 'react';\nimport { InputNumber } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputNumber />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InputText",
      "description": "InputText component for text input",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/InputText.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InputText",
          "code": "import React from 'react';\nimport { InputText } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputText />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InputTextarea",
      "description": "InputTextarea component for text input",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/InputTextarea.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InputTextarea",
          "code": "import React from 'react';\nimport { InputTextarea } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputTextarea />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SearchObjectsFromDB",
      "description": "SearchObjectsFromDB component for searching objects from database",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/SearchObjectsFromDB.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SearchObjectsFromDB",
          "code": "import React from 'react';\nimport { SearchObjectsFromDB } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SearchObjectsFromDB />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ToggleButton",
      "description": "ToggleButton component for changing state.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/ToggleButton.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "button",
        "action"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ToggleButton",
          "code": "import React from 'react';\nimport { ToggleButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ToggleButton />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation",
        "user-actions",
        "event-handling",
        "form-submission"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": true,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DateInputPicker",
      "description": "DateInputPicker component for picking date and time.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/DateInputPicker.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DateInputPicker",
          "code": "import React from 'react';\nimport { DateInputPicker } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DateInputPicker />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ChipsInput",
      "description": "ChipsInput is used to enter multiple values on an input field.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/ChipsInput.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ChipsInput",
          "code": "import React from 'react';\nimport { ChipsInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChipsInput />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "RadioButton",
      "description": "RadioButton is used to enter single value on an input field.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/radio-btn/RadioButton.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "button",
        "action"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of RadioButton",
          "code": "import React from 'react';\nimport { RadioButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioButton />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation",
        "user-actions",
        "event-handling",
        "form-submission"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": true,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "RadioGroup",
      "description": "RadioGroup is used to select each from group value on an input field.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/radio-btn/RadioGroup.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of RadioGroup",
          "code": "import React from 'react';\nimport { RadioGroup } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioGroup />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InputAmount",
      "description": "InputAmount is used to enter amount on an input field.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/InputAmount.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InputAmount",
          "code": "import React from 'react';\nimport { InputAmount } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputAmount />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CheckBoxes",
      "description": "CheckBoxes is used to enter multiple values on an input field.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/CheckBoxes.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CheckBoxes",
          "code": "import React from 'react';\nimport { CheckBoxes } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CheckBoxes />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CheckBoxesField",
      "description": "CheckBoxesField is used to enter multiple values on an input field.",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/CheckboxesField.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CheckBoxesField",
          "code": "import React from 'react';\nimport { CheckBoxesField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CheckBoxesField />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CountryInput",
      "description": "Searchable country selector input field",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/CountryInput.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CountryInput",
          "code": "import React from 'react';\nimport { CountryInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CountryInput />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CountryStateInput",
      "description": "Searchable state/province selector based on selected country",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/CountryStateInput.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CountryStateInput",
          "code": "import React from 'react';\nimport { CountryStateInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CountryStateInput />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InputSearchDropdown",
      "description": "Generic searchable dropdown component for organizations",
      "category": "Form",
      "type": "component",
      "filePath": "src/components/forms/InputSearchDropdown.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "form",
        "input",
        "form"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InputSearchDropdown",
          "code": "import React from 'react';\nimport { InputSearchDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputSearchDropdown />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField"
      ],
      "usagePatterns": [
        "form-building",
        "data-input",
        "validation"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": false,
        "screenReaderSupport": true,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "IsUsernameEmailTaken",
      "description": "Username/email availability checker",
      "category": "Auth",
      "type": "component",
      "filePath": "src/components/auth/IsUsernameEmailTaken.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of IsUsernameEmailTaken",
          "code": "import React from 'react';\nimport { IsUsernameEmailTaken } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IsUsernameEmailTaken />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm",
        "SignUpForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ClientDetector",
      "description": "Client device detection component",
      "category": "Auth",
      "type": "component",
      "filePath": "src/components/auth/ClientDetector.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ClientDetector",
          "code": "import React from 'react';\nimport { ClientDetector } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ClientDetector />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm",
        "SignUpForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "PasswordsMatch",
      "description": "Password matching validation component",
      "category": "Auth",
      "type": "component",
      "filePath": "src/components/auth/PasswordsMatch.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of PasswordsMatch",
          "code": "import React from 'react';\nimport { PasswordsMatch } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PasswordsMatch />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "FromInstinctHub",
        "LoginForm",
        "SignUpForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FromInstinctHub",
      "description": "From InstinctHub component",
      "category": "Auth",
      "type": "component",
      "filePath": "src/components/auth/FromInstinctHub.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FromInstinctHub",
          "code": "import React from 'react';\nimport { FromInstinctHub } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FromInstinctHub />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "LoginForm",
        "SignUpForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "LoginForm",
      "description": "Login form component",
      "category": "Auth",
      "type": "component",
      "filePath": "src/components/auth/LoginForm.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of LoginForm",
          "code": "import React from 'react';\nimport { LoginForm } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <LoginForm />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "SignUpForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SignUpForm",
      "description": "Sign up form component",
      "category": "Auth",
      "type": "component",
      "filePath": "src/__examples__/src/components/forms/SignUpFormExample.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SignUpForm",
          "code": "import React from 'react';\nimport { SignUpForm } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SignUpForm />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ReactClientProviders",
      "description": "Comprehensive wrapper providing all essential React providers",
      "category": "Auth",
      "type": "context",
      "filePath": "src/components/auth/ReactClientProviders.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ReactClientProviders",
          "code": "import React from 'react';\nimport { ReactClientProviders } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReactClientProviders />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ClientOnly",
      "description": "Wrapper component that only renders children on client side",
      "category": "Auth",
      "type": "component",
      "filePath": "src/components/auth/ClientOnly.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ClientOnly",
          "code": "import React from 'react';\nimport { ClientOnly } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ClientOnly />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "useClientSide",
      "description": "Hook for safely handling client-side initialization",
      "category": "Auth",
      "type": "hook",
      "filePath": "src/components/auth/useClientSide.ts",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of useClientSide",
          "code": "import React from 'react';\nimport { useClientSide } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useClientSide />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "useFormattedDate",
      "description": "Hook for consistent date formatting between server and client",
      "category": "Auth",
      "type": "hook",
      "filePath": "src/components/auth/useFormattedDate.ts",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of useFormattedDate",
          "code": "import React from 'react';\nimport { useFormattedDate } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useFormattedDate />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "useStableRandom",
      "description": "Hook for generating stable random values",
      "category": "Auth",
      "type": "hook",
      "filePath": "src/components/auth/useStableRandom.ts",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of useStableRandom",
          "code": "import React from 'react';\nimport { useStableRandom } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useStableRandom />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "useExternalData",
      "description": "Hook for safely handling external data to prevent hydration mismatches",
      "category": "Auth",
      "type": "hook",
      "filePath": "src/components/auth/useExternalData.ts",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "auth"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of useExternalData",
          "code": "import React from 'react';\nimport { useExternalData } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useExternalData />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms.css",
        "forms/input-fields.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ChannelListAvatar",
      "description": "Channel list avatar component",
      "category": "Navbar",
      "type": "component",
      "filePath": "src/components/navbar/ChannelListAvatar.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "navbar"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ChannelListAvatar",
          "code": "import React from 'react';\nimport { ChannelListAvatar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChannelListAvatar />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "MenuDropdown",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "navbar/breadcrumb.css",
        "navbar/menu-dropdown.css",
        "navbar/navbar-index.css",
        "navbar/responsive-navbar.css",
        "navbar/sidenav.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MenuDropdown",
      "description": "Menu dropdown component",
      "category": "Navbar",
      "type": "component",
      "filePath": "src/components/navbar/MenuDropdown.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "navbar"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MenuDropdown",
          "code": "import React from 'react';\nimport { MenuDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MenuDropdown />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChannelListAvatar",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "navbar/breadcrumb.css",
        "navbar/menu-dropdown.css",
        "navbar/navbar-index.css",
        "navbar/responsive-navbar.css",
        "navbar/sidenav.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Breadcrumb",
      "description": "Breadcrumb component",
      "category": "Navbar",
      "type": "component",
      "filePath": "src/components/navbar/Breadcrumb.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "navbar"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Breadcrumb",
          "code": "import React from 'react';\nimport { Breadcrumb } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Breadcrumb />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChannelListAvatar",
        "MenuDropdown",
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "navbar/breadcrumb.css",
        "navbar/menu-dropdown.css",
        "navbar/navbar-index.css",
        "navbar/responsive-navbar.css",
        "navbar/sidenav.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ResponsiveNavbar",
      "description": "Responsive navbar component",
      "category": "Navbar",
      "type": "component",
      "filePath": "src/components/navbar/ResponsiveNavbar.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "navbar",
        "navigation",
        "menu"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ResponsiveNavbar",
          "code": "import React from 'react';\nimport { ResponsiveNavbar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ResponsiveNavbar />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChannelListAvatar",
        "MenuDropdown",
        "Breadcrumb",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "usagePatterns": [
        "routing",
        "menu-navigation",
        "breadcrumbs"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "navbar/breadcrumb.css",
        "navbar/menu-dropdown.css",
        "navbar/navbar-index.css",
        "navbar/responsive-navbar.css",
        "navbar/sidenav.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SideNavbar",
      "description": "Side navbar component",
      "category": "Navbar",
      "type": "component",
      "filePath": "src/components/navbar/SideNavbar.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "navbar",
        "navigation",
        "menu"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SideNavbar",
          "code": "import React from 'react';\nimport { SideNavbar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SideNavbar />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChannelListAvatar",
        "MenuDropdown",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbarContext"
      ],
      "usagePatterns": [
        "routing",
        "menu-navigation",
        "breadcrumbs"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "navbar/breadcrumb.css",
        "navbar/menu-dropdown.css",
        "navbar/navbar-index.css",
        "navbar/responsive-navbar.css",
        "navbar/sidenav.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SideNavbarContext",
      "description": "Context provider for side navigation state management",
      "category": "Navbar",
      "type": "context",
      "filePath": "src/components/navbar/SideNavbarContext.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "navbar",
        "navigation",
        "menu"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SideNavbarContext",
          "code": "import React from 'react';\nimport { SideNavbarContext } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SideNavbarContext />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChannelListAvatar",
        "MenuDropdown",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbar"
      ],
      "usagePatterns": [
        "routing",
        "menu-navigation",
        "breadcrumbs"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "navbar/breadcrumb.css",
        "navbar/menu-dropdown.css",
        "navbar/navbar-index.css",
        "navbar/responsive-navbar.css",
        "navbar/sidenav.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CustomTextEditor",
      "description": "Custom text editor component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/editor/CustomTextEditor.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CustomTextEditor",
          "code": "import React from 'react';\nimport { CustomTextEditor } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CustomTextEditor />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable",
        "IHubTableServer"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ContentViewer",
      "description": "Content viewer component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/viewer/ContentViewer.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ContentViewer",
          "code": "import React from 'react';\nimport { ContentViewer } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ContentViewer />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable",
        "IHubTableServer"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ContentViewOrEdit",
      "description": "Content view or edit component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/viewer/ContentViewOrEdit.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 2",
          "description": "Usage example for ContentViewOrEdit",
          "code": "\"use client\";\r\nimport { ContentViewer, ContentViewOrEdit } from \"../../../../index\";\r\nimport { useState } from \"react\";\r\n\r\nconsole.log(ContentViewer);\r\n\r\nexport default function ContentViewOrEditSample() {\r\n  const [content, setContent] = useState<string>(\r\n    \"<h2>Getting Started with InstinctHub</h2><p>Welcome to your course content! This editor allows you to create rich, interactive content for your students.</p><ul><li>Format text using the toolbar above</li><li>Add images, tables, and code samples</li><li>Create interactive task lists</li></ul><p>Click the edit button to make changes, then preview to see how your content will appear to students.</p>\"\r\n  );\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const toggleEditMode = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n  return (\r\n    <div>\r\n      <ContentViewer\r\n        content={content}\r\n        title=\"Course Module: Introduction\"\r\n        onContentChange={toggleEditMode}\r\n        showToolbar={true}\r\n      />\r\n\r\n      <ContentViewOrEdit\r\n        setContent={setContent}\r\n        content={content}\r\n        title=\"Course Module: Introduction\"\r\n        showToolbar={true}\r\n        placeholder=\"Write your course content here...\"\r\n        charLimit={10000}\r\n        lastUpdated=\"2023-05-01 12:00:00\"\r\n        showEditBtn={true}\r\n        showPreviewBtn={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "CodeDisplay",
        "IHubTable",
        "IHubTableServer"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CodeDisplay",
      "description": "Code display component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/viewer/CodeDisplay.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CodeDisplay",
          "code": "import React from 'react';\nimport { CodeDisplay } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CodeDisplay />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "IHubTable",
        "IHubTableServer"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "IHubTable",
      "description": "InstinctHub table component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/tables/IHubTable.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "table",
        "data"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of IHubTable",
          "code": "import React from 'react';\nimport { IHubTable } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IHubTable />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Tables",
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay"
      ],
      "usagePatterns": [
        "data-display",
        "sorting",
        "pagination"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "high",
        "memoryUsage": "medium",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "IHubTableServer",
      "description": "InstinctHub server table component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/tables/IHubTableServer.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "table",
        "data"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of IHubTableServer",
          "code": "import React from 'react';\nimport { IHubTableServer } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IHubTableServer />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Tables",
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay"
      ],
      "usagePatterns": [
        "data-display",
        "sorting",
        "pagination"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "high",
        "memoryUsage": "medium",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "OrDivider",
      "description": "Or divider component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/OrDivider.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of OrDivider",
          "code": "import React from 'react';\nimport { OrDivider } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <OrDivider />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Card",
      "description": "Card component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/Card.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Card",
          "code": "import React from 'react';\nimport { Card } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Card />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CardList",
      "description": "Card list component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/CardList.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CardList",
          "code": "import React from 'react';\nimport { CardList } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CardList />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CardGrid",
      "description": "Card grid component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/CardGrid.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CardGrid",
          "code": "import React from 'react';\nimport { CardGrid } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CardGrid />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "HorizontalCard",
      "description": "Horizontal card component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/HorizontalCard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of HorizontalCard",
          "code": "import React from 'react';\nimport { HorizontalCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <HorizontalCard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "FeatureCard",
      "description": "Feature card component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/FeatureCard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of FeatureCard",
          "code": "import React from 'react';\nimport { FeatureCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FeatureCard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MediaCard",
      "description": "Media card component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/MediaCard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MediaCard",
          "code": "import React from 'react';\nimport { MediaCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MediaCard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "PricingCard",
      "description": "Pricing card component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/PricingCard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of PricingCard",
          "code": "import React from 'react';\nimport { PricingCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PricingCard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ProfileCard",
      "description": "Profile card component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/cards/ProfileCard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ProfileCard",
          "code": "import React from 'react';\nimport { ProfileCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ProfileCard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "RandomGradientImage",
      "description": "Random gradient image component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/images/RandomGradientImage.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of RandomGradientImage",
          "code": "import React from 'react';\nimport { RandomGradientImage } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RandomGradientImage />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Dialog",
      "description": "A reusable dialog component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/dialogs/Dialog.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "modal",
        "overlay"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 1",
          "description": "Usage example for Dialog",
          "code": "\"use client\"\r\nimport React, { useState } from \"react\";\r\nimport { Dialog } from \"../../../../index\";\r\n\r\nconst DialogExample: React.FC = () => {\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const openDialog = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ihub-container\">\r\n      <h1>Dialog Example</h1>\r\n      \r\n      <button \r\n        className=\"ihub-important-btn\" \r\n        onClick={openDialog}\r\n      >\r\n        Open Dialog\r\n      </button>\r\n      \r\n      <Dialog\r\n        isOpen={isDialogOpen}\r\n        onClose={closeDialog}\r\n        title=\"Confirmation\"\r\n        footer={\r\n          <div className=\"ihub-buttons\">\r\n            <button \r\n              className=\"ihub-danger-btn\"\r\n              onClick={closeDialog}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              className=\"ihub-important-btn\"\r\n              onClick={() => {\r\n                // Handle confirmation\r\n                closeDialog();\r\n              }}\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        }\r\n      >\r\n        <p>Are you sure you want to proceed with this action?</p>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogExample;\r\n",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [
        "user-interaction",
        "overlay",
        "dialog"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals.css",
        "modals/modal.css",
        "modals/style.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Badge",
      "description": "A reusable Badge component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/Badge.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Badge",
          "code": "import React from 'react';\nimport { Badge } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Badge />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Action",
      "description": "A reusable Action component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/Action.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Action",
          "code": "import React from 'react';\nimport { Action } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Action />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Dropdown",
      "description": "A reusable Dropdown component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/Dropdown.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Dropdown",
          "code": "import React from 'react';\nimport { Dropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Dropdown />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ColorPicker",
      "description": "A reusable ColorPicker component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/ColorPicker.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 1",
          "description": "Usage example for ColorPicker",
          "code": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { ColorPicker } from \"../../../../index\";\r\n\r\nconst ColorPickerExample: React.FC = () => {\r\n  const [primaryColor, setPrimaryColor] = useState(\"#0066cc\");\r\n  const [secondaryColor, setSecondaryColor] = useState(\"#ff6b6b\");\r\n\r\n  const handlePrimaryColorChange = (color: string) => {\r\n    console.log(\"Primary color changed:\", color);\r\n    setPrimaryColor(color);\r\n  };\r\n\r\n  const handleSecondaryColorChange = (color: string) => {\r\n    console.log(\"Secondary color changed:\", color);\r\n    setSecondaryColor(color);\r\n  };\r\n\r\n  // Override the preset colors by modifying the PRESET_COLORS array\r\n  const CUSTOM_COLORS = [\"#ff6b6b\", \"#4ecdc4\", \"#45b7d1\", \"#96ceb4\", \"#ffeaa7\"];\r\n\r\n  return (\r\n    <div className=\"space-y-8 p-4\">\r\n      {/* Basic Usage */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Basic Color Picker</h2>\r\n        <ColorPicker\r\n          id=\"basic-color-picker\"\r\n          label=\"Basic Color Picker\"\r\n          defaultColor=\"#000000\"\r\n          onChange={(color) => console.log(\"Basic color changed:\", color)}\r\n        />\r\n      </div>\r\n\r\n      {/* Without Dropdown Button */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Without Dropdown Button</h2>\r\n        <ColorPicker\r\n          showButton={false}\r\n          defaultColor=\"#4ecdc4\"\r\n          onChange={(color) => console.log(\"No button color changed:\", color)}\r\n        />\r\n      </div>\r\n\r\n      {/* Form Integration */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Form Integration</h2>\r\n        <form className=\"space-y-4\">\r\n          <div>\r\n            <ColorPicker\r\n              label=\"Primary Color\"\r\n              name=\"primary_color\"\r\n              defaultColor={primaryColor}\r\n              onChange={handlePrimaryColorChange}\r\n              className=\"ihub-mb-3\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <ColorPicker\r\n              label=\"Secondary Color\"\r\n              name=\"secondary_color\"\r\n              defaultColor={secondaryColor}\r\n              onChange={handleSecondaryColorChange}\r\n              className=\"ihub-mb-3\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <ColorPicker\r\n              label=\"Hide Preview, Formats, and EyeDropper\"\r\n              className=\"ihub-mb-3\"\r\n              hidePreview={true}\r\n              hideFormats={true}\r\n              hideEyeDropper={true}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n          >\r\n            Save Colors\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Controlled Component Example */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Controlled Component</h2>\r\n        <ColorPicker\r\n          defaultColor={primaryColor}\r\n          onChange={handlePrimaryColorChange}\r\n        />\r\n        <div\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            backgroundColor: primaryColor,\r\n            marginTop: \"20px\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Custom Preset Colors */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Custom Preset Colors</h2>\r\n        <ColorPicker\r\n          CUSTOM_COLORS={CUSTOM_COLORS}\r\n          onChange={(color) => console.log(\"Custom color changed:\", color)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPickerExample;\r\n",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Pagination",
      "description": "A reusable Pagination component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/pagination/Pagination.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Pagination",
          "code": "import React from 'react';\nimport { Pagination } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Pagination />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "PaginationDemo",
      "description": "A demo for the Pagination component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/pagination/PaginationDemo.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of PaginationDemo",
          "code": "import React from 'react';\nimport { PaginationDemo } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PaginationDemo />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CreateButton",
      "description": "A reusable CreateButton component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/create-button/CreateButton.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "button",
        "action"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CreateButton",
          "code": "import React from 'react';\nimport { CreateButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CreateButton />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "SubmitButton",
        "ToggleButton",
        "RadioButton",
        "CustomTextEditor",
        "ContentViewer"
      ],
      "usagePatterns": [
        "user-actions",
        "event-handling",
        "form-submission"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CreateButtonExample",
      "description": "An example of the CreateButton component",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/create-button/CreateButtonExample.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "button",
        "action"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CreateButtonExample",
          "code": "import React from 'react';\nimport { CreateButtonExample } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CreateButtonExample />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "SubmitButton",
        "ToggleButton",
        "RadioButton",
        "CustomTextEditor",
        "ContentViewer"
      ],
      "usagePatterns": [
        "user-actions",
        "event-handling",
        "form-submission"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MenuBar",
      "description": "Toolbar component for the TipTap rich text editor",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/editor/MenuBar.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MenuBar",
          "code": "import React from 'react';\nimport { MenuBar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MenuBar />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InstinctHubChart",
      "description": "Versatile chart component supporting multiple chart types",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/charts/InstinctHubChart.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "chart",
        "visualization"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InstinctHubChart",
          "code": "import React from 'react';\nimport { InstinctHubChart } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InstinctHubChart />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "high",
        "memoryUsage": "medium",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "InstinctHubChartDashboard",
      "description": "Dashboard component showcasing multiple charts",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/charts/InstinctHubChartDashboard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "chart",
        "visualization"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of InstinctHubChartDashboard",
          "code": "import React from 'react';\nimport { InstinctHubChartDashboard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InstinctHubChartDashboard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "high",
        "memoryUsage": "medium",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ChartConfigurator",
      "description": "Interactive chart configuration interface",
      "category": "UI",
      "type": "component",
      "filePath": "src/components/ui/charts/ChartConfigurator.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "ui",
        "chart",
        "visualization"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ChartConfigurator",
          "code": "import React from 'react';\nimport { ChartConfigurator } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChartConfigurator />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css",
        "ui/action.css",
        "ui/badge.css",
        "ui/card.css",
        "ui/charts.css",
        "ui/dropdown-styles.css",
        "ui/tables.css",
        "ui/ui-index.css"
      ],
      "performance": {
        "renderComplexity": "high",
        "memoryUsage": "medium",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ChangeStyleVariable",
      "description": "Style variable changer component",
      "category": "Theme",
      "type": "component",
      "filePath": "src/components/theme/ChangeStyleVariable.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "theme"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ChangeStyleVariable",
          "code": "import React from 'react';\nimport { ChangeStyleVariable } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChangeStyleVariable />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "DarkModeProvider",
        "LoadingAnimate",
        "SessionProviders",
        "SessionExpiresLogout",
        "SignOutSession"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "darkmode.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DarkModeProvider",
      "description": "Dark mode provider component",
      "category": "Theme",
      "type": "context",
      "filePath": "src/components/theme/DarkModeProvider.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "theme"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DarkModeProvider",
          "code": "import React from 'react';\nimport { DarkModeProvider } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DarkModeProvider />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChangeStyleVariable",
        "LoadingAnimate",
        "SessionProviders",
        "SessionExpiresLogout",
        "SignOutSession"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "darkmode.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "LoadingAnimate",
      "description": "Loading animation component",
      "category": "Theme",
      "type": "component",
      "filePath": "src/components/theme/LoadingAnimate.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "theme"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of LoadingAnimate",
          "code": "import React from 'react';\nimport { LoadingAnimate } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <LoadingAnimate />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChangeStyleVariable",
        "DarkModeProvider",
        "SessionProviders",
        "SessionExpiresLogout",
        "SignOutSession"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "darkmode.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SessionProviders",
      "description": "Session providers component",
      "category": "Theme",
      "type": "context",
      "filePath": "src/components/theme/SessionProviders.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "theme"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SessionProviders",
          "code": "import React from 'react';\nimport { SessionProviders } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SessionProviders />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChangeStyleVariable",
        "DarkModeProvider",
        "LoadingAnimate",
        "SessionExpiresLogout",
        "SignOutSession"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "darkmode.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SessionExpiresLogout",
      "description": "Session expiration logout component",
      "category": "Theme",
      "type": "component",
      "filePath": "src/components/theme/signout/SessionExpiresLogout.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "theme"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SessionExpiresLogout",
          "code": "import React from 'react';\nimport { SessionExpiresLogout } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SessionExpiresLogout />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChangeStyleVariable",
        "DarkModeProvider",
        "LoadingAnimate",
        "SessionProviders",
        "SignOutSession"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "darkmode.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SignOutSession",
      "description": "Sign out session component",
      "category": "Theme",
      "type": "component",
      "filePath": "src/components/theme/signout/SignOutSession.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "theme"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SignOutSession",
          "code": "import React from 'react';\nimport { SignOutSession } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SignOutSession />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "ChangeStyleVariable",
        "DarkModeProvider",
        "LoadingAnimate",
        "SessionProviders",
        "SessionExpiresLogout"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "darkmode.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "TimeTracker",
      "description": "Time tracking component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/ReactTimeTracker.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of TimeTracker",
          "code": "import React from 'react';\nimport { TimeTracker } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TimeTracker />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "ReactTimeTracker",
        "DeleteConfirmationModal"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "SessionHandleProvider",
      "description": "Session handling provider component",
      "category": "Status",
      "type": "context",
      "filePath": "src/components/status/SessionHandleProvider.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of SessionHandleProvider",
          "code": "import React from 'react';\nimport { SessionHandleProvider } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SessionHandleProvider />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "Error500",
        "ErrorState",
        "ReactTimeTracker",
        "DeleteConfirmationModal"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Error500",
      "description": "500 error display component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/Error500.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Error500",
          "code": "import React from 'react';\nimport { Error500 } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Error500 />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "SessionHandleProvider",
        "ErrorState",
        "ReactTimeTracker",
        "DeleteConfirmationModal"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ErrorState",
      "description": "Error state display component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/ErrorState.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ErrorState",
          "code": "import React from 'react';\nimport { ErrorState } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ErrorState />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ReactTimeTracker",
        "DeleteConfirmationModal"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ReactTimeTracker",
      "description": "React time tracking component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/ReactTimeTracker.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ReactTimeTracker",
          "code": "import React from 'react';\nimport { ReactTimeTracker } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReactTimeTracker />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "DeleteConfirmationModal"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "DeleteConfirmationModal",
      "description": "Delete confirmation modal component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/DeleteConfirmationModal.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status",
        "modal",
        "overlay"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of DeleteConfirmationModal",
          "code": "import React from 'react';\nimport { DeleteConfirmationModal } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DeleteConfirmationModal />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Dialog",
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState"
      ],
      "usagePatterns": [
        "user-interaction",
        "overlay",
        "dialog"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals.css",
        "modals/modal.css",
        "modals/style.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CopyToClipboard",
      "description": "Copy to clipboard functionality component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/CopyToClipBoard.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CopyToClipboard",
          "code": "import React from 'react';\nimport { CopyToClipboard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CopyToClipboard />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "ReactTimeTracker"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MultiPurposeModal",
      "description": "Multi-purpose modal component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/MultiPurposeModal.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status",
        "modal",
        "overlay"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MultiPurposeModal",
          "code": "import React from 'react';\nimport { MultiPurposeModal } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MultiPurposeModal />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Dialog",
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState"
      ],
      "usagePatterns": [
        "user-interaction",
        "overlay",
        "dialog"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals.css",
        "modals/modal.css",
        "modals/style.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "ModalExamples",
      "description": "Modal examples component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/ModalExamples.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status",
        "modal",
        "overlay"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of ModalExamples",
          "code": "import React from 'react';\nimport { ModalExamples } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ModalExamples />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Dialog",
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState"
      ],
      "usagePatterns": [
        "user-interaction",
        "overlay",
        "dialog"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals.css",
        "modals/modal.css",
        "modals/style.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "medium",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "NotFound",
      "description": "Not found component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/NotFound.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of NotFound",
          "code": "import React from 'react';\nimport { NotFound } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <NotFound />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "ReactTimeTracker"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Unauthorized",
      "description": "Unauthorized component",
      "category": "Status",
      "type": "component",
      "filePath": "src/components/status/Unauthorized.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "status"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Unauthorized",
          "code": "import React from 'react';\nimport { Unauthorized } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Unauthorized />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "ReactTimeTracker"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "modals/modal.css",
        "root.css",
        "status/error-state.css",
        "status/not-found.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Tabs",
      "description": "Tab navigation component",
      "category": "Tabs",
      "type": "component",
      "filePath": "src/components/tabs/Tabs.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "tabs"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 1",
          "description": "Usage example for Tabs",
          "code": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Tabs } from \"../../../../index\";\r\nimport { TabItemType } from \"@/types\";\r\n\r\nconst TabsExample: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<string>(\"profile\");\r\n  \r\n  const handleTabChange = (tabId: string) => {\r\n    setActiveTab(tabId);\r\n    console.log(`Tab changed to: ${tabId}`);\r\n  };\r\n\r\n  const tabItems = [\r\n    {\r\n      id: \"profile\",\r\n      label: \"Profile\",\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Profile Information</h3>\r\n          <p>This is the profile tab content. Here you can display user profile information.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"security\",\r\n      label: \"Security\",\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Security Settings</h3>\r\n          <p>Change your password and security preferences here.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"notifications\",\r\n      label: \"Notifications\",\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Notification Preferences</h3>\r\n          <p>Manage your notification settings and preferences.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"billing\",\r\n      label: \"Billing\",\r\n      disabled: true,\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Billing Information</h3>\r\n          <p>View and manage your billing settings.</p>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ihub-container\">\r\n      <h2>Default Tabs</h2>\r\n      <Tabs \r\n        items={tabItems} \r\n        defaultActiveTab={activeTab}\r\n        onChange={(tabId: TabItemType) => handleTabChange(tabId.id)}\r\n      />\r\n      \r\n      <h2 className=\"ihub-mt-8\">Bordered Tabs</h2>\r\n      <Tabs \r\n        items={tabItems} \r\n        defaultActiveTab=\"security\"\r\n        variant=\"bordered\"\r\n      />\r\n      \r\n      <h2 className=\"ihub-mt-8\">Pills Tabs</h2>\r\n      <Tabs \r\n        items={tabItems} \r\n        defaultActiveTab=\"notifications\"\r\n        variant=\"pills\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsExample;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "VerticalTabs",
        "TabContent"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tabs/main.css",
        "tabs/style.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "VerticalTabs",
      "description": "Vertical tab navigation component",
      "category": "Tabs",
      "type": "component",
      "filePath": "src/components/tabs/VerticalTabs.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "tabs"
      ],
      "props": [],
      "examples": [
        {
          "title": "Example 1",
          "description": "Usage example for VerticalTabs",
          "code": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n// Import icons (assuming you're using a library like Lucide or similar)\r\nimport { \r\n  User, \r\n  Shield, \r\n  Bell, \r\n  CreditCard, \r\n  Settings, \r\n  HelpCircle \r\n} from \"lucide-react\";\r\nimport VerticalTabs from \"../../../../components/tabs/VerticalTabs\";\r\nimport { VerticalTabItemType } from \"@/types\";\r\n\r\nconst VerticalTabsExample: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<string>(\"profile\");\r\n  \r\n  const handleTabChange = (tabId: string) => {\r\n    setActiveTab(tabId);\r\n    console.log(`Tab changed to: ${tabId}`);\r\n  };\r\n\r\n  const tabItems = [\r\n    {\r\n      id: \"profile\",\r\n      label: \"Profile\",\r\n      icon: <User size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Profile Information</h3>\r\n          <p>Manage your personal information, profile picture, and public details.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Personal Details</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <p>Name: John Doe</p>\r\n              <p>Email: john.doe@example.com</p>\r\n              <p>Location: New York, USA</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"security\",\r\n      label: \"Security\",\r\n      icon: <Shield size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Security Settings</h3>\r\n          <p>Manage your password, two-factor authentication, and security preferences.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Password</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <p>Last changed: 30 days ago</p>\r\n              <button className=\"ihub-important-btn ihub-mt-2\">Change Password</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"notifications\",\r\n      label: \"Notifications\",\r\n      icon: <Bell size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Notification Preferences</h3>\r\n          <p>Control which notifications you receive and how they are delivered.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Email Notifications</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <div className=\"ihub-mb-2\">\r\n                <input type=\"checkbox\" id=\"updates\" checked />\r\n                <label htmlFor=\"updates\" className=\"ihub-ml-2\">Product Updates</label>\r\n              </div>\r\n              <div className=\"ihub-mb-2\">\r\n                <input type=\"checkbox\" id=\"news\" checked />\r\n                <label htmlFor=\"news\" className=\"ihub-ml-2\">InstinctHub News</label>\r\n              </div>\r\n              <div className=\"ihub-mb-2\">\r\n                <input type=\"checkbox\" id=\"activity\" />\r\n                <label htmlFor=\"activity\" className=\"ihub-ml-2\">Account Activity</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"billing\",\r\n      label: \"Billing\",\r\n      icon: <CreditCard size={18} />,\r\n      disabled: true,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Billing Information</h3>\r\n          <p>View and manage your subscription, payment methods, and billing history.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"settings\",\r\n      label: \"Settings\",\r\n      icon: <Settings size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Account Settings</h3>\r\n          <p>Manage your account preferences, language, and other settings.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Language & Region</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <div className=\"ihub-mb-3\">\r\n                <label className=\"ihub-mb-1 ihub-block\">Language</label>\r\n                <select className=\"ihub-p-2 ihub-w-full\">\r\n                  <option>English</option>\r\n                  <option>French</option>\r\n                  <option>Spanish</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"ihub-mb-1 ihub-block\">Time Zone</label>\r\n                <select className=\"ihub-p-2 ihub-w-full\">\r\n                  <option>UTC (Coordinated Universal Time)</option>\r\n                  <option>EST (Eastern Standard Time)</option>\r\n                  <option>PST (Pacific Standard Time)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"help\",\r\n      label: \"Help & Support\",\r\n      icon: <HelpCircle size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Help & Support</h3>\r\n          <p>Get assistance with using InstinctHub products and services.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Support Options</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <div className=\"ihub-mb-3\">\r\n                <h5 className=\"ihub-font-semibold\">Documentation</h5>\r\n                <p>Browse our comprehensive documentation for guides and tutorials.</p>\r\n                <a href=\"#\" className=\"ihub-text-cyan-700 ihub-font-semibold\">View Documentation</a>\r\n              </div>\r\n              <div className=\"ihub-mb-3\">\r\n                <h5 className=\"ihub-font-semibold\">Contact Support</h5>\r\n                <p>Get in touch with our support team for personalized help.</p>\r\n                <button className=\"ihub-outlined-btn ihub-mt-2\">Contact Support</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ihub-container\">\r\n      <h2 className=\"ihub-mb-6\">Account Management</h2>\r\n      <VerticalTabs \r\n        items={tabItems} \r\n        defaultActiveTab={activeTab}\r\n        onChange={(tabId: VerticalTabItemType) => handleTabChange(tabId.id as string)}\r\n        className=\"ihub-border ihub-rounded-lg ihub-p-6 ihub-bg-white ihub-shadow-sm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalTabsExample;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Tabs",
        "TabContent"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tabs/main.css",
        "tabs/style.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "TabContent",
      "description": "Tab content display component",
      "category": "Tabs",
      "type": "component",
      "filePath": "src/components/tabs/TabContent.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "tabs"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of TabContent",
          "code": "import React from 'react';\nimport { TabContent } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TabContent />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Tabs",
        "VerticalTabs"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tabs/main.css",
        "tabs/style.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Cursor",
      "description": "Custom cursor component with trailing effects and animations",
      "category": "Cursors",
      "type": "component",
      "filePath": "src/components/cursors/Cursor.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "cursors"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Cursor",
          "code": "import React from 'react';\nimport { Cursor } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Cursor />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "MagneticButton",
        "CursorContext",
        "useCursorInteraction",
        "CursorControlDemo"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "cursors/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "MagneticButton",
      "description": "Button component with magnetic cursor attraction effect",
      "category": "Cursors",
      "type": "component",
      "filePath": "src/components/cursors/MagneticButton.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "cursors",
        "button",
        "action"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of MagneticButton",
          "code": "import React from 'react';\nimport { MagneticButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MagneticButton />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "SubmitButton",
        "ToggleButton",
        "RadioButton",
        "CreateButton",
        "CreateButtonExample"
      ],
      "usagePatterns": [
        "user-actions",
        "event-handling",
        "form-submission"
      ],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "cursors/style.css",
        "forms/submit-button.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": true,
        "keyboardNavigation": true,
        "screenReaderSupport": false,
        "focusManagement": true
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CursorContext",
      "description": "Context provider for cursor state management across the application",
      "category": "Cursors",
      "type": "context",
      "filePath": "src/components/cursors/CursorContext.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "cursors"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CursorContext",
          "code": "import React from 'react';\nimport { CursorContext } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CursorContext />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Cursor",
        "MagneticButton",
        "useCursorInteraction",
        "CursorControlDemo"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "cursors/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "useCursorInteraction",
      "description": "Hook for adding interactive cursor effects to elements",
      "category": "Cursors",
      "type": "hook",
      "filePath": "src/components/cursors/useCursorInteraction.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "cursors"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of useCursorInteraction",
          "code": "import React from 'react';\nimport { useCursorInteraction } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useCursorInteraction />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Cursor",
        "MagneticButton",
        "CursorContext",
        "CursorControlDemo"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "cursors/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "CursorControlDemo",
      "description": "Comprehensive demo component for the cursor system",
      "category": "Cursors",
      "type": "component",
      "filePath": "src/components/cursors/CursorControlDemo.tsx",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "cursors"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of CursorControlDemo",
          "code": "import React from 'react';\nimport { CursorControlDemo } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CursorControlDemo />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [
        "Cursor",
        "MagneticButton",
        "CursorContext",
        "useCursorInteraction"
      ],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "cursors/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    },
    {
      "name": "Paystack",
      "description": "Paystack payment integration component",
      "category": "Library",
      "type": "component",
      "filePath": "src/components/lib/readme/paystack.md",
      "importPath": "@instincthub/react-ui",
      "tags": [
        "library"
      ],
      "props": [],
      "examples": [
        {
          "title": "Basic Usage",
          "description": "Basic implementation of Paystack",
          "code": "import React from 'react';\nimport { Paystack } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Paystack />\n  );\n}\n\nexport default MyComponent;",
          "framework": "react"
        }
      ],
      "relatedComponents": [],
      "usagePatterns": [],
      "dependencies": [],
      "styleRequirements": [
        "bootstrap/style.css",
        "main.css",
        "root.css",
        "tag-only-selectors.css"
      ],
      "performance": {
        "renderComplexity": "low",
        "memoryUsage": "low",
        "rerenderTriggers": [
          "props",
          "state",
          "context"
        ]
      },
      "accessibility": {
        "ariaSupport": false,
        "keyboardNavigation": false,
        "screenReaderSupport": false,
        "focusManagement": false
      },
      "testing": {
        "hasTests": false,
        "testExamples": [],
        "mockRequirements": [
          "react-testing-library",
          "@testing-library/jest-dom"
        ]
      }
    }
  ],
  "integrations": {
    "nextjs": {
      "setup": [
        "npm install @instincthub/react-ui",
        "Import components: import { ComponentName } from \"@instincthub/react-ui\"",
        "Add CSS imports to your _app.tsx or layout file"
      ],
      "examples": [
        {
          "component": "LoginForm",
          "code": "import { LoginForm } from \"@instincthub/react-ui\";\n\nfunction Page() {\n  return <LoginForm onSubmit={handleLogin} />;\n}"
        }
      ]
    },
    "typescript": {
      "types": [
        "@instincthub/react-ui/types"
      ],
      "interfaces": [
        {
          "name": "ComponentProps",
          "definition": "Interface definitions available in the package"
        }
      ]
    },
    "styling": {
      "coreFiles": [
        {
          "name": "root.css",
          "description": "CSS custom properties (variables) and global resets",
          "purpose": "Defines the design system variables and global box-sizing reset",
          "loadOrder": 1,
          "required": true
        },
        {
          "name": "main.css",
          "description": "Core typography and base element styles",
          "purpose": "Typography, font weights, and common utility classes",
          "loadOrder": 2,
          "required": true
        },
        {
          "name": "tag-only-selectors.css",
          "description": "Global HTML tag styling (h1-h6, body, hr, etc.)",
          "purpose": "Consistent styling for all HTML elements",
          "loadOrder": 3,
          "required": true
        },
        {
          "name": "bootstrap/style.css",
          "description": "Bootstrap-style utility classes with ihub- prefix",
          "purpose": "Utility classes for layout, spacing, display, etc.",
          "loadOrder": 4,
          "required": true
        }
      ],
      "cssVariables": [
        "--DarkCyan: #00838f",
        "--TurkishRose: #bc658d",
        "--Gunmetal: #2c333a",
        "--ViridianGreen: #009ba2",
        "--White: #ffffff",
        "--Danger: #ea5f5e",
        "--FadeGlass: #ffffffe6",
        "--Main-Gradient: linear-gradient(79.85deg, #009ba2 -20.87%, #bc658d 87.74%)",
        "--Dark-Gradient: linear-gradient(90deg, rgba(0, 0, 0, 1) 0%, rgba(33, 33, 33, 1) 35%, rgba(79, 79, 79, 1) 100%)",
        "--Nunito: Nunito, sans-serif",
        "--Montserat: Montserrat, sans-serif"
      ],
      "utilityClasses": [
        "ihub-d-none",
        "ihub-d-block",
        "ihub-d-flex",
        "ihub-d-inline",
        "ihub-m-0",
        "ihub-m-1",
        "ihub-m-2",
        "ihub-m-3",
        "ihub-m-4",
        "ihub-m-5",
        "ihub-p-0",
        "ihub-p-1",
        "ihub-p-2",
        "ihub-p-3",
        "ihub-p-4",
        "ihub-p-5",
        "ihub-text-left",
        "ihub-text-center",
        "ihub-text-right",
        "ihub-fs-1",
        "ihub-fs-2",
        "ihub-fs-3",
        "ihub-fs-4",
        "ihub-fs-5",
        "ihub-fs-6",
        "ihub-w-25",
        "ihub-w-50",
        "ihub-w-75",
        "ihub-w-100",
        "ihub-h-25",
        "ihub-h-50",
        "ihub-h-75",
        "ihub-h-100"
      ],
      "themes": [
        "light",
        "dark"
      ],
      "loadingOrder": [
        "1. root.css (CSS variables)",
        "2. main.css (typography)",
        "3. tag-only-selectors.css (global tags)",
        "4. bootstrap/style.css (utilities)",
        "5. Category-specific CSS files",
        "6. Component-specific CSS files"
      ],
      "integrationGuide": {
        "nextjs": [
          "Import CSS in _app.tsx or layout.tsx",
          "Use CSS modules or global imports",
          "Import in the correct order for proper cascading"
        ],
        "react": [
          "Import CSS files in index.js or App.js",
          "Ensure proper loading order",
          "Use CSS custom properties for theming"
        ],
        "vite": [
          "Import CSS in main.tsx or App.tsx",
          "Configure PostCSS if using CSS processing",
          "Use CSS variables for consistent theming"
        ]
      }
    }
  },
  "codeGeneration": {
    "templates": [
      {
        "name": "basic-form",
        "description": "Basic form with validation",
        "components": [
          "InputText",
          "SubmitButton",
          "FormError"
        ],
        "code": "import React, { useState } from 'react';\nimport { InputText, SubmitButton, FormError } from '@instincthub/react-ui';\n\nfunction BasicForm() {\n  const [formData, setFormData] = useState({ name: '', email: '' });\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Handle form submission\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputText\n        label=\"Name\"\n        value={formData.name}\n        onChange={(value) => setFormData(prev => ({ ...prev, name: value }))}\n      />\n      <InputText\n        label=\"Email\"\n        type=\"email\"\n        value={formData.email}\n        onChange={(value) => setFormData(prev => ({ ...prev, email: value }))}\n      />\n      <SubmitButton loading={false}>Submit</SubmitButton>\n      <FormError errors={errors} />\n    </form>\n  );\n}",
        "framework": "react"
      },
      {
        "name": "data-table",
        "description": "Data table with pagination and sorting",
        "components": [
          "IHubTable",
          "Pagination",
          "THeadSortBtn"
        ],
        "code": "import React, { useState } from 'react';\nimport { IHubTable, Pagination } from '@instincthub/react-ui';\n\nfunction DataTableExample() {\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState(null);\n\n  return (\n    <div>\n      <IHubTable\n        data={data}\n        sortConfig={sortConfig}\n        onSort={setSortConfig}\n      />\n      <Pagination\n        currentPage={currentPage}\n        totalPages={10}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n}",
        "framework": "react"
      }
    ],
    "patterns": [
      {
        "name": "form-wizard",
        "description": "Multi-step form pattern",
        "use_cases": [
          "user-onboarding",
          "complex-forms",
          "data-collection"
        ],
        "components": [
          "Tabs",
          "InputText",
          "SubmitButton",
          "StepProgressBar"
        ],
        "example": "Multi-step form with validation and progress tracking"
      },
      {
        "name": "dashboard-layout",
        "description": "Dashboard with charts and tables",
        "use_cases": [
          "analytics",
          "monitoring",
          "data-visualization"
        ],
        "components": [
          "InstinctHubChart",
          "IHubTable",
          "Card",
          "Badge"
        ],
        "example": "Complete dashboard with metrics and data tables"
      }
    ]
  },
  "searchIndex": {
    "byName": {
      "actiondropdown": {
        "name": "ActionDropdown",
        "description": "Dropdown component for actions",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/ActionDropdown.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ActionDropdown",
            "code": "import React from 'react';\nimport { ActionDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ActionDropdown />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "DropFile"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "animatedbox": {
        "name": "AnimatedBox",
        "description": "Animated container component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/AnimatedBox.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 1",
            "description": "Usage example for AnimatedBox",
            "code": "import { AnimatedBox } from \"../../../../index\";\r\n\r\nconst AnimatedBoxExample: React.FC = () => {\r\n  return <AnimatedBox />;\r\n};\r\n\r\nexport default AnimatedBoxExample;\r\n",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "DropFile"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "passwordfield": {
        "name": "PasswordField",
        "description": "Secure password input field",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/PasswordField.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of PasswordField",
            "code": "import React from 'react';\nimport { PasswordField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PasswordField />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "DateInput",
          "DateTimeInput",
          "DropFile"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "dateinput": {
        "name": "DateInput",
        "description": "Date selection input field",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/DateInput.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DateInput",
            "code": "import React from 'react';\nimport { DateInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DateInput />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateTimeInput",
          "DropFile"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "datetimeinput": {
        "name": "DateTimeInput",
        "description": "Date and time selection input field",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/DateTimeInput.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DateTimeInput",
            "code": "import React from 'react';\nimport { DateTimeInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DateTimeInput />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DropFile"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "dropfile": {
        "name": "DropFile",
        "description": "File drag and drop component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/DropFile.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DropFile",
            "code": "import React from 'react';\nimport { DropFile } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DropFile />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "emaillist": {
        "name": "EmailList",
        "description": "Email list display component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/EmailList.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of EmailList",
            "code": "import React from 'react';\nimport { EmailList } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <EmailList />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "filterarray": {
        "name": "FilterArray",
        "description": "Array filtering component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/FilterArray.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FilterArray",
            "code": "import React from 'react';\nimport { FilterArray } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FilterArray />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "filterby": {
        "name": "FilterBy",
        "description": "Filtering component with criteria",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/FilterBy.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FilterBy",
            "code": "import React from 'react';\nimport { FilterBy } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FilterBy />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "filterobjects": {
        "name": "FilterObjects",
        "description": "Object filtering component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/FilterObjects.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FilterObjects",
            "code": "import React from 'react';\nimport { FilterObjects } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FilterObjects />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "formerror": {
        "name": "FormError",
        "description": "Form error display component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/FormError.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FormError",
            "code": "import React from 'react';\nimport { FormError } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FormError />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "handleerror": {
        "name": "HandleError",
        "description": "Error handling component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/HandleError.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of HandleError",
            "code": "import React from 'react';\nimport { HandleError } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <HandleError />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "logout": {
        "name": "Logout",
        "description": "Logout functionality component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/Logout.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Logout",
            "code": "import React from 'react';\nimport { Logout } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Logout />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "messagedisplay": {
        "name": "MessageDisplay",
        "description": "Message display component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/MessageDisplay.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MessageDisplay",
            "code": "import React from 'react';\nimport { MessageDisplay } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MessageDisplay />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "multipleemail": {
        "name": "MultipleEmail",
        "description": "Multiple email input component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/MultipleEmail.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MultipleEmail",
            "code": "import React from 'react';\nimport { MultipleEmail } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MultipleEmail />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "pageloading": {
        "name": "PageLoading",
        "description": "Page loading indicator component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/PageLoading.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of PageLoading",
            "code": "import React from 'react';\nimport { PageLoading } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PageLoading />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "phonenumberinput": {
        "name": "PhoneNumberInput",
        "description": "Phone number input with formatting",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/PhoneNumberInput.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of PhoneNumberInput",
            "code": "import React from 'react';\nimport { PhoneNumberInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PhoneNumberInput />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "radiofield": {
        "name": "RadioField",
        "description": "Radio button input field",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/RadioField.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of RadioField",
            "code": "import React from 'react';\nimport { RadioField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioField />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "radiosimple": {
        "name": "RadioSimple",
        "description": "Simplified radio button component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/RadioSimple.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of RadioSimple",
            "code": "import React from 'react';\nimport { RadioSimple } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioSimple />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "reacttimeago": {
        "name": "ReactTimeAgo",
        "description": "Time ago display component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/ReactTimeAgo.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ReactTimeAgo",
            "code": "import React from 'react';\nimport { ReactTimeAgo } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReactTimeAgo />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "readtermsandcondition": {
        "name": "ReadTermsAndCondition",
        "description": "Terms and conditions acceptance component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/ReadTermsAndCondition.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ReadTermsAndCondition",
            "code": "import React from 'react';\nimport { ReadTermsAndCondition } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReadTermsAndCondition />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "searchfield": {
        "name": "SearchField",
        "description": "Search input field component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/SearchField.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SearchField",
            "code": "import React from 'react';\nimport { SearchField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SearchField />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "searchfielddb": {
        "name": "SearchFieldDB",
        "description": "Database search field component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/SearchFieldDB.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SearchFieldDB",
            "code": "import React from 'react';\nimport { SearchFieldDB } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SearchFieldDB />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "stepprogressbar": {
        "name": "StepProgressBar",
        "description": "Step progress indicator component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/StepProgressBar.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of StepProgressBar",
            "code": "import React from 'react';\nimport { StepProgressBar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <StepProgressBar />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "submitbutton": {
        "name": "SubmitButton",
        "description": "Form submission button component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/SubmitButton.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "button",
          "action"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SubmitButton",
            "code": "import React from 'react';\nimport { SubmitButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SubmitButton />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "tables": {
        "name": "Tables",
        "description": "Table display component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/Tables.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "table",
          "data"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Tables",
            "code": "import React from 'react';\nimport { Tables } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Tables />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "data-display",
          "sorting",
          "pagination"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/tables.css"
        ],
        "performance": {
          "renderComplexity": "high",
          "memoryUsage": "medium",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "textarea": {
        "name": "TextArea",
        "description": "Multi-line text input component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/TextArea.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of TextArea",
            "code": "import React from 'react';\nimport { TextArea } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TextArea />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "textfield": {
        "name": "TextField",
        "description": "Text input field component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/TextField.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 1",
            "description": "Usage example for TextField",
            "code": "// Example usage of the TextField component\r\n\r\nimport React, { useState } from \"react\";\r\nimport { TextField } from \"../../../../index\";\r\n\r\nconst TextFieldExample: React.FC = () => {\r\n  const [objectsList, setObjectsList] = useState([\r\n    { school_name: \"Harvard University\" },\r\n    { school_name: \"Stanford University\" },\r\n  ]);\r\n\r\n  // Handle change for array props\r\n  const handleChange = (propsArray: [number, string], value: string) => {\r\n    // Updated record object key based on passed index and name.\r\n    const [recordIndex, name] = propsArray;\r\n    const updatedList = objectsList.map((item, i) =>\r\n      i === recordIndex ? { ...item, [name]: value } : item\r\n    );\r\n    setObjectsList(updatedList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Text Fields</h2>\r\n\r\n      {objectsList.map((option, index) => (\r\n        <div key={index}>\r\n          <h3>School {index + 1}</h3>\r\n          <TextField\r\n            name={`school_name_${index}`}\r\n            type=\"text\"\r\n            label=\"High School Name *\"\r\n            required={true}\r\n            defaultValue={option.school_name}\r\n            arrayProps={[index, \"school_name\"]}\r\n            setArrayProps={handleChange}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      <pre>{JSON.stringify(objectsList, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextFieldExample;\r\n",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "tooltip": {
        "name": "Tooltip",
        "description": "Tooltip display component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/Tooltip.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Tooltip",
            "code": "import React from 'react';\nimport { Tooltip } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Tooltip />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "unsplashrandomimage": {
        "name": "UnsplashRandomImage",
        "description": "Random image from Unsplash component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/UnsplashRandomImage.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of UnsplashRandomImage",
            "code": "import React from 'react';\nimport { UnsplashRandomImage } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <UnsplashRandomImage />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "downloadasexcel": {
        "name": "DownloadAsExcel",
        "description": "Excel download functionality component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/DownloadAsExcel.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DownloadAsExcel",
            "code": "import React from 'react';\nimport { DownloadAsExcel } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DownloadAsExcel />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "theadsortbtn": {
        "name": "THeadSortBtn",
        "description": "Table header sort button component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/THeadSortBtn.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of THeadSortBtn",
            "code": "import React from 'react';\nimport { THeadSortBtn } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <THeadSortBtn />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "theadsortlist": {
        "name": "THeadSortList",
        "description": "Table header sort list component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/THeadSortList.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of THeadSortList",
            "code": "import React from 'react';\nimport { THeadSortList } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <THeadSortList />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "tbodynodata": {
        "name": "TBodyNoData",
        "description": "Table body empty state component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/TBodyNoData.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of TBodyNoData",
            "code": "import React from 'react';\nimport { TBodyNoData } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TBodyNoData />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "fileuploader": {
        "name": "FileUploader",
        "description": "File upload component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/uploads/FileUploader.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FileUploader",
            "code": "import React from 'react';\nimport { FileUploader } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FileUploader />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "ihubfileuploader": {
        "name": "IhubFileUploader",
        "description": "InstinctHub file upload component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/uploads/IhubFileUploader.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of IhubFileUploader",
            "code": "import React from 'react';\nimport { IhubFileUploader } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IhubFileUploader />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "actioncallbackdropdown": {
        "name": "ActionCallbackDropdown",
        "description": "Action callback dropdown component",
        "category": "Forms",
        "type": "component",
        "filePath": "src/components/forms/ActionCallbackDropdown.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "forms"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ActionCallbackDropdown",
            "code": "import React from 'react';\nimport { ActionCallbackDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ActionCallbackDropdown />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ActionDropdown",
          "AnimatedBox",
          "PasswordField",
          "DateInput",
          "DateTimeInput"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/forms-index.css",
          "forms/input-fields.css",
          "forms/submit-btn.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "inputnumber": {
        "name": "InputNumber",
        "description": "InputNumber component for numerical input",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/InputNumber.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InputNumber",
            "code": "import React from 'react';\nimport { InputNumber } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputNumber />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "inputtext": {
        "name": "InputText",
        "description": "InputText component for text input",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/InputText.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InputText",
            "code": "import React from 'react';\nimport { InputText } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputText />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "inputtextarea": {
        "name": "InputTextarea",
        "description": "InputTextarea component for text input",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/InputTextarea.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InputTextarea",
            "code": "import React from 'react';\nimport { InputTextarea } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputTextarea />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "searchobjectsfromdb": {
        "name": "SearchObjectsFromDB",
        "description": "SearchObjectsFromDB component for searching objects from database",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/SearchObjectsFromDB.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SearchObjectsFromDB",
            "code": "import React from 'react';\nimport { SearchObjectsFromDB } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SearchObjectsFromDB />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "togglebutton": {
        "name": "ToggleButton",
        "description": "ToggleButton component for changing state.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/ToggleButton.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "button",
          "action"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ToggleButton",
            "code": "import React from 'react';\nimport { ToggleButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ToggleButton />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": true,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "dateinputpicker": {
        "name": "DateInputPicker",
        "description": "DateInputPicker component for picking date and time.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/DateInputPicker.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DateInputPicker",
            "code": "import React from 'react';\nimport { DateInputPicker } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DateInputPicker />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "chipsinput": {
        "name": "ChipsInput",
        "description": "ChipsInput is used to enter multiple values on an input field.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/ChipsInput.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ChipsInput",
            "code": "import React from 'react';\nimport { ChipsInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChipsInput />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "radiobutton": {
        "name": "RadioButton",
        "description": "RadioButton is used to enter single value on an input field.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/radio-btn/RadioButton.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "button",
          "action"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of RadioButton",
            "code": "import React from 'react';\nimport { RadioButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioButton />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": true,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "radiogroup": {
        "name": "RadioGroup",
        "description": "RadioGroup is used to select each from group value on an input field.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/radio-btn/RadioGroup.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of RadioGroup",
            "code": "import React from 'react';\nimport { RadioGroup } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RadioGroup />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "inputamount": {
        "name": "InputAmount",
        "description": "InputAmount is used to enter amount on an input field.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/InputAmount.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InputAmount",
            "code": "import React from 'react';\nimport { InputAmount } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputAmount />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "checkboxes": {
        "name": "CheckBoxes",
        "description": "CheckBoxes is used to enter multiple values on an input field.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/CheckBoxes.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CheckBoxes",
            "code": "import React from 'react';\nimport { CheckBoxes } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CheckBoxes />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "checkboxesfield": {
        "name": "CheckBoxesField",
        "description": "CheckBoxesField is used to enter multiple values on an input field.",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/CheckboxesField.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CheckBoxesField",
            "code": "import React from 'react';\nimport { CheckBoxesField } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CheckBoxesField />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "countryinput": {
        "name": "CountryInput",
        "description": "Searchable country selector input field",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/CountryInput.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CountryInput",
            "code": "import React from 'react';\nimport { CountryInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CountryInput />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "countrystateinput": {
        "name": "CountryStateInput",
        "description": "Searchable state/province selector based on selected country",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/CountryStateInput.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CountryStateInput",
            "code": "import React from 'react';\nimport { CountryStateInput } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CountryStateInput />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "inputsearchdropdown": {
        "name": "InputSearchDropdown",
        "description": "Generic searchable dropdown component for organizations",
        "category": "Form",
        "type": "component",
        "filePath": "src/components/forms/InputSearchDropdown.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "form",
          "input",
          "form"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InputSearchDropdown",
            "code": "import React from 'react';\nimport { InputSearchDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InputSearchDropdown />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "PasswordField",
          "DateInput",
          "DateTimeInput",
          "PhoneNumberInput",
          "RadioField"
        ],
        "usagePatterns": [
          "form-building",
          "data-input",
          "validation"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": false,
          "screenReaderSupport": true,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "isusernameemailtaken": {
        "name": "IsUsernameEmailTaken",
        "description": "Username/email availability checker",
        "category": "Auth",
        "type": "component",
        "filePath": "src/components/auth/IsUsernameEmailTaken.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of IsUsernameEmailTaken",
            "code": "import React from 'react';\nimport { IsUsernameEmailTaken } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IsUsernameEmailTaken />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm",
          "SignUpForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "clientdetector": {
        "name": "ClientDetector",
        "description": "Client device detection component",
        "category": "Auth",
        "type": "component",
        "filePath": "src/components/auth/ClientDetector.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ClientDetector",
            "code": "import React from 'react';\nimport { ClientDetector } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ClientDetector />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm",
          "SignUpForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "passwordsmatch": {
        "name": "PasswordsMatch",
        "description": "Password matching validation component",
        "category": "Auth",
        "type": "component",
        "filePath": "src/components/auth/PasswordsMatch.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of PasswordsMatch",
            "code": "import React from 'react';\nimport { PasswordsMatch } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PasswordsMatch />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "FromInstinctHub",
          "LoginForm",
          "SignUpForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "frominstincthub": {
        "name": "FromInstinctHub",
        "description": "From InstinctHub component",
        "category": "Auth",
        "type": "component",
        "filePath": "src/components/auth/FromInstinctHub.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FromInstinctHub",
            "code": "import React from 'react';\nimport { FromInstinctHub } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FromInstinctHub />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "LoginForm",
          "SignUpForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "loginform": {
        "name": "LoginForm",
        "description": "Login form component",
        "category": "Auth",
        "type": "component",
        "filePath": "src/components/auth/LoginForm.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of LoginForm",
            "code": "import React from 'react';\nimport { LoginForm } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <LoginForm />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "SignUpForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "signupform": {
        "name": "SignUpForm",
        "description": "Sign up form component",
        "category": "Auth",
        "type": "component",
        "filePath": "src/__examples__/src/components/forms/SignUpFormExample.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SignUpForm",
            "code": "import React from 'react';\nimport { SignUpForm } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SignUpForm />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "reactclientproviders": {
        "name": "ReactClientProviders",
        "description": "Comprehensive wrapper providing all essential React providers",
        "category": "Auth",
        "type": "context",
        "filePath": "src/components/auth/ReactClientProviders.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ReactClientProviders",
            "code": "import React from 'react';\nimport { ReactClientProviders } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReactClientProviders />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "clientonly": {
        "name": "ClientOnly",
        "description": "Wrapper component that only renders children on client side",
        "category": "Auth",
        "type": "component",
        "filePath": "src/components/auth/ClientOnly.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ClientOnly",
            "code": "import React from 'react';\nimport { ClientOnly } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ClientOnly />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "useclientside": {
        "name": "useClientSide",
        "description": "Hook for safely handling client-side initialization",
        "category": "Auth",
        "type": "hook",
        "filePath": "src/components/auth/useClientSide.ts",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of useClientSide",
            "code": "import React from 'react';\nimport { useClientSide } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useClientSide />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "useformatteddate": {
        "name": "useFormattedDate",
        "description": "Hook for consistent date formatting between server and client",
        "category": "Auth",
        "type": "hook",
        "filePath": "src/components/auth/useFormattedDate.ts",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of useFormattedDate",
            "code": "import React from 'react';\nimport { useFormattedDate } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useFormattedDate />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "usestablerandom": {
        "name": "useStableRandom",
        "description": "Hook for generating stable random values",
        "category": "Auth",
        "type": "hook",
        "filePath": "src/components/auth/useStableRandom.ts",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of useStableRandom",
            "code": "import React from 'react';\nimport { useStableRandom } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useStableRandom />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "useexternaldata": {
        "name": "useExternalData",
        "description": "Hook for safely handling external data to prevent hydration mismatches",
        "category": "Auth",
        "type": "hook",
        "filePath": "src/components/auth/useExternalData.ts",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "auth"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of useExternalData",
            "code": "import React from 'react';\nimport { useExternalData } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useExternalData />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "IsUsernameEmailTaken",
          "ClientDetector",
          "PasswordsMatch",
          "FromInstinctHub",
          "LoginForm"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms.css",
          "forms/input-fields.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "channellistavatar": {
        "name": "ChannelListAvatar",
        "description": "Channel list avatar component",
        "category": "Navbar",
        "type": "component",
        "filePath": "src/components/navbar/ChannelListAvatar.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "navbar"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ChannelListAvatar",
            "code": "import React from 'react';\nimport { ChannelListAvatar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChannelListAvatar />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "MenuDropdown",
          "Breadcrumb",
          "ResponsiveNavbar",
          "SideNavbar",
          "SideNavbarContext"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "navbar/breadcrumb.css",
          "navbar/menu-dropdown.css",
          "navbar/navbar-index.css",
          "navbar/responsive-navbar.css",
          "navbar/sidenav.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "menudropdown": {
        "name": "MenuDropdown",
        "description": "Menu dropdown component",
        "category": "Navbar",
        "type": "component",
        "filePath": "src/components/navbar/MenuDropdown.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "navbar"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MenuDropdown",
            "code": "import React from 'react';\nimport { MenuDropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MenuDropdown />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChannelListAvatar",
          "Breadcrumb",
          "ResponsiveNavbar",
          "SideNavbar",
          "SideNavbarContext"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "navbar/breadcrumb.css",
          "navbar/menu-dropdown.css",
          "navbar/navbar-index.css",
          "navbar/responsive-navbar.css",
          "navbar/sidenav.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "breadcrumb": {
        "name": "Breadcrumb",
        "description": "Breadcrumb component",
        "category": "Navbar",
        "type": "component",
        "filePath": "src/components/navbar/Breadcrumb.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "navbar"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Breadcrumb",
            "code": "import React from 'react';\nimport { Breadcrumb } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Breadcrumb />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChannelListAvatar",
          "MenuDropdown",
          "ResponsiveNavbar",
          "SideNavbar",
          "SideNavbarContext"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "navbar/breadcrumb.css",
          "navbar/menu-dropdown.css",
          "navbar/navbar-index.css",
          "navbar/responsive-navbar.css",
          "navbar/sidenav.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "responsivenavbar": {
        "name": "ResponsiveNavbar",
        "description": "Responsive navbar component",
        "category": "Navbar",
        "type": "component",
        "filePath": "src/components/navbar/ResponsiveNavbar.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "navbar",
          "navigation",
          "menu"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ResponsiveNavbar",
            "code": "import React from 'react';\nimport { ResponsiveNavbar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ResponsiveNavbar />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChannelListAvatar",
          "MenuDropdown",
          "Breadcrumb",
          "SideNavbar",
          "SideNavbarContext"
        ],
        "usagePatterns": [
          "routing",
          "menu-navigation",
          "breadcrumbs"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "navbar/breadcrumb.css",
          "navbar/menu-dropdown.css",
          "navbar/navbar-index.css",
          "navbar/responsive-navbar.css",
          "navbar/sidenav.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "sidenavbar": {
        "name": "SideNavbar",
        "description": "Side navbar component",
        "category": "Navbar",
        "type": "component",
        "filePath": "src/components/navbar/SideNavbar.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "navbar",
          "navigation",
          "menu"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SideNavbar",
            "code": "import React from 'react';\nimport { SideNavbar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SideNavbar />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChannelListAvatar",
          "MenuDropdown",
          "Breadcrumb",
          "ResponsiveNavbar",
          "SideNavbarContext"
        ],
        "usagePatterns": [
          "routing",
          "menu-navigation",
          "breadcrumbs"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "navbar/breadcrumb.css",
          "navbar/menu-dropdown.css",
          "navbar/navbar-index.css",
          "navbar/responsive-navbar.css",
          "navbar/sidenav.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "sidenavbarcontext": {
        "name": "SideNavbarContext",
        "description": "Context provider for side navigation state management",
        "category": "Navbar",
        "type": "context",
        "filePath": "src/components/navbar/SideNavbarContext.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "navbar",
          "navigation",
          "menu"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SideNavbarContext",
            "code": "import React from 'react';\nimport { SideNavbarContext } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SideNavbarContext />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChannelListAvatar",
          "MenuDropdown",
          "Breadcrumb",
          "ResponsiveNavbar",
          "SideNavbar"
        ],
        "usagePatterns": [
          "routing",
          "menu-navigation",
          "breadcrumbs"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "navbar/breadcrumb.css",
          "navbar/menu-dropdown.css",
          "navbar/navbar-index.css",
          "navbar/responsive-navbar.css",
          "navbar/sidenav.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "customtexteditor": {
        "name": "CustomTextEditor",
        "description": "Custom text editor component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/editor/CustomTextEditor.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CustomTextEditor",
            "code": "import React from 'react';\nimport { CustomTextEditor } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CustomTextEditor />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable",
          "IHubTableServer"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "contentviewer": {
        "name": "ContentViewer",
        "description": "Content viewer component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/viewer/ContentViewer.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ContentViewer",
            "code": "import React from 'react';\nimport { ContentViewer } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ContentViewer />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable",
          "IHubTableServer"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "contentvieworedit": {
        "name": "ContentViewOrEdit",
        "description": "Content view or edit component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/viewer/ContentViewOrEdit.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 2",
            "description": "Usage example for ContentViewOrEdit",
            "code": "\"use client\";\r\nimport { ContentViewer, ContentViewOrEdit } from \"../../../../index\";\r\nimport { useState } from \"react\";\r\n\r\nconsole.log(ContentViewer);\r\n\r\nexport default function ContentViewOrEditSample() {\r\n  const [content, setContent] = useState<string>(\r\n    \"<h2>Getting Started with InstinctHub</h2><p>Welcome to your course content! This editor allows you to create rich, interactive content for your students.</p><ul><li>Format text using the toolbar above</li><li>Add images, tables, and code samples</li><li>Create interactive task lists</li></ul><p>Click the edit button to make changes, then preview to see how your content will appear to students.</p>\"\r\n  );\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const toggleEditMode = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n  return (\r\n    <div>\r\n      <ContentViewer\r\n        content={content}\r\n        title=\"Course Module: Introduction\"\r\n        onContentChange={toggleEditMode}\r\n        showToolbar={true}\r\n      />\r\n\r\n      <ContentViewOrEdit\r\n        setContent={setContent}\r\n        content={content}\r\n        title=\"Course Module: Introduction\"\r\n        showToolbar={true}\r\n        placeholder=\"Write your course content here...\"\r\n        charLimit={10000}\r\n        lastUpdated=\"2023-05-01 12:00:00\"\r\n        showEditBtn={true}\r\n        showPreviewBtn={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "CodeDisplay",
          "IHubTable",
          "IHubTableServer"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "codedisplay": {
        "name": "CodeDisplay",
        "description": "Code display component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/viewer/CodeDisplay.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CodeDisplay",
            "code": "import React from 'react';\nimport { CodeDisplay } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CodeDisplay />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "IHubTable",
          "IHubTableServer"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "ihubtable": {
        "name": "IHubTable",
        "description": "InstinctHub table component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/tables/IHubTable.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "table",
          "data"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of IHubTable",
            "code": "import React from 'react';\nimport { IHubTable } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IHubTable />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Tables",
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay"
        ],
        "usagePatterns": [
          "data-display",
          "sorting",
          "pagination"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "high",
          "memoryUsage": "medium",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "ihubtableserver": {
        "name": "IHubTableServer",
        "description": "InstinctHub server table component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/tables/IHubTableServer.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "table",
          "data"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of IHubTableServer",
            "code": "import React from 'react';\nimport { IHubTableServer } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <IHubTableServer />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Tables",
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay"
        ],
        "usagePatterns": [
          "data-display",
          "sorting",
          "pagination"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "high",
          "memoryUsage": "medium",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "ordivider": {
        "name": "OrDivider",
        "description": "Or divider component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/OrDivider.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of OrDivider",
            "code": "import React from 'react';\nimport { OrDivider } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <OrDivider />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "card": {
        "name": "Card",
        "description": "Card component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/Card.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Card",
            "code": "import React from 'react';\nimport { Card } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Card />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "cardlist": {
        "name": "CardList",
        "description": "Card list component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/CardList.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CardList",
            "code": "import React from 'react';\nimport { CardList } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CardList />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "cardgrid": {
        "name": "CardGrid",
        "description": "Card grid component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/CardGrid.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CardGrid",
            "code": "import React from 'react';\nimport { CardGrid } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CardGrid />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "horizontalcard": {
        "name": "HorizontalCard",
        "description": "Horizontal card component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/HorizontalCard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of HorizontalCard",
            "code": "import React from 'react';\nimport { HorizontalCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <HorizontalCard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "featurecard": {
        "name": "FeatureCard",
        "description": "Feature card component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/FeatureCard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of FeatureCard",
            "code": "import React from 'react';\nimport { FeatureCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <FeatureCard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "mediacard": {
        "name": "MediaCard",
        "description": "Media card component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/MediaCard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MediaCard",
            "code": "import React from 'react';\nimport { MediaCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MediaCard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "pricingcard": {
        "name": "PricingCard",
        "description": "Pricing card component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/PricingCard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of PricingCard",
            "code": "import React from 'react';\nimport { PricingCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PricingCard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "profilecard": {
        "name": "ProfileCard",
        "description": "Profile card component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/cards/ProfileCard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ProfileCard",
            "code": "import React from 'react';\nimport { ProfileCard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ProfileCard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "randomgradientimage": {
        "name": "RandomGradientImage",
        "description": "Random gradient image component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/images/RandomGradientImage.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of RandomGradientImage",
            "code": "import React from 'react';\nimport { RandomGradientImage } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <RandomGradientImage />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "dialog": {
        "name": "Dialog",
        "description": "A reusable dialog component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/dialogs/Dialog.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "modal",
          "overlay"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 1",
            "description": "Usage example for Dialog",
            "code": "\"use client\"\r\nimport React, { useState } from \"react\";\r\nimport { Dialog } from \"../../../../index\";\r\n\r\nconst DialogExample: React.FC = () => {\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const openDialog = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ihub-container\">\r\n      <h1>Dialog Example</h1>\r\n      \r\n      <button \r\n        className=\"ihub-important-btn\" \r\n        onClick={openDialog}\r\n      >\r\n        Open Dialog\r\n      </button>\r\n      \r\n      <Dialog\r\n        isOpen={isDialogOpen}\r\n        onClose={closeDialog}\r\n        title=\"Confirmation\"\r\n        footer={\r\n          <div className=\"ihub-buttons\">\r\n            <button \r\n              className=\"ihub-danger-btn\"\r\n              onClick={closeDialog}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              className=\"ihub-important-btn\"\r\n              onClick={() => {\r\n                // Handle confirmation\r\n                closeDialog();\r\n              }}\r\n            >\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        }\r\n      >\r\n        <p>Are you sure you want to proceed with this action?</p>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogExample;\r\n",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [
          "user-interaction",
          "overlay",
          "dialog"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals.css",
          "modals/modal.css",
          "modals/style.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "badge": {
        "name": "Badge",
        "description": "A reusable Badge component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/Badge.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Badge",
            "code": "import React from 'react';\nimport { Badge } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Badge />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "action": {
        "name": "Action",
        "description": "A reusable Action component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/Action.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Action",
            "code": "import React from 'react';\nimport { Action } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Action />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "dropdown": {
        "name": "Dropdown",
        "description": "A reusable Dropdown component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/Dropdown.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Dropdown",
            "code": "import React from 'react';\nimport { Dropdown } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Dropdown />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "colorpicker": {
        "name": "ColorPicker",
        "description": "A reusable ColorPicker component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/ColorPicker.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 1",
            "description": "Usage example for ColorPicker",
            "code": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { ColorPicker } from \"../../../../index\";\r\n\r\nconst ColorPickerExample: React.FC = () => {\r\n  const [primaryColor, setPrimaryColor] = useState(\"#0066cc\");\r\n  const [secondaryColor, setSecondaryColor] = useState(\"#ff6b6b\");\r\n\r\n  const handlePrimaryColorChange = (color: string) => {\r\n    console.log(\"Primary color changed:\", color);\r\n    setPrimaryColor(color);\r\n  };\r\n\r\n  const handleSecondaryColorChange = (color: string) => {\r\n    console.log(\"Secondary color changed:\", color);\r\n    setSecondaryColor(color);\r\n  };\r\n\r\n  // Override the preset colors by modifying the PRESET_COLORS array\r\n  const CUSTOM_COLORS = [\"#ff6b6b\", \"#4ecdc4\", \"#45b7d1\", \"#96ceb4\", \"#ffeaa7\"];\r\n\r\n  return (\r\n    <div className=\"space-y-8 p-4\">\r\n      {/* Basic Usage */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Basic Color Picker</h2>\r\n        <ColorPicker\r\n          id=\"basic-color-picker\"\r\n          label=\"Basic Color Picker\"\r\n          defaultColor=\"#000000\"\r\n          onChange={(color) => console.log(\"Basic color changed:\", color)}\r\n        />\r\n      </div>\r\n\r\n      {/* Without Dropdown Button */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Without Dropdown Button</h2>\r\n        <ColorPicker\r\n          showButton={false}\r\n          defaultColor=\"#4ecdc4\"\r\n          onChange={(color) => console.log(\"No button color changed:\", color)}\r\n        />\r\n      </div>\r\n\r\n      {/* Form Integration */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Form Integration</h2>\r\n        <form className=\"space-y-4\">\r\n          <div>\r\n            <ColorPicker\r\n              label=\"Primary Color\"\r\n              name=\"primary_color\"\r\n              defaultColor={primaryColor}\r\n              onChange={handlePrimaryColorChange}\r\n              className=\"ihub-mb-3\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <ColorPicker\r\n              label=\"Secondary Color\"\r\n              name=\"secondary_color\"\r\n              defaultColor={secondaryColor}\r\n              onChange={handleSecondaryColorChange}\r\n              className=\"ihub-mb-3\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <ColorPicker\r\n              label=\"Hide Preview, Formats, and EyeDropper\"\r\n              className=\"ihub-mb-3\"\r\n              hidePreview={true}\r\n              hideFormats={true}\r\n              hideEyeDropper={true}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n          >\r\n            Save Colors\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Controlled Component Example */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Controlled Component</h2>\r\n        <ColorPicker\r\n          defaultColor={primaryColor}\r\n          onChange={handlePrimaryColorChange}\r\n        />\r\n        <div\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            backgroundColor: primaryColor,\r\n            marginTop: \"20px\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Custom Preset Colors */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"ihub-fs-lg\">Custom Preset Colors</h2>\r\n        <ColorPicker\r\n          CUSTOM_COLORS={CUSTOM_COLORS}\r\n          onChange={(color) => console.log(\"Custom color changed:\", color)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPickerExample;\r\n",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "pagination": {
        "name": "Pagination",
        "description": "A reusable Pagination component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/pagination/Pagination.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Pagination",
            "code": "import React from 'react';\nimport { Pagination } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Pagination />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "paginationdemo": {
        "name": "PaginationDemo",
        "description": "A demo for the Pagination component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/pagination/PaginationDemo.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of PaginationDemo",
            "code": "import React from 'react';\nimport { PaginationDemo } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <PaginationDemo />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "createbutton": {
        "name": "CreateButton",
        "description": "A reusable CreateButton component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/create-button/CreateButton.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "button",
          "action"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CreateButton",
            "code": "import React from 'react';\nimport { CreateButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CreateButton />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "SubmitButton",
          "ToggleButton",
          "RadioButton",
          "CustomTextEditor",
          "ContentViewer"
        ],
        "usagePatterns": [
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "createbuttonexample": {
        "name": "CreateButtonExample",
        "description": "An example of the CreateButton component",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/create-button/CreateButtonExample.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "button",
          "action"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CreateButtonExample",
            "code": "import React from 'react';\nimport { CreateButtonExample } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CreateButtonExample />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "SubmitButton",
          "ToggleButton",
          "RadioButton",
          "CustomTextEditor",
          "ContentViewer"
        ],
        "usagePatterns": [
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "menubar": {
        "name": "MenuBar",
        "description": "Toolbar component for the TipTap rich text editor",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/editor/MenuBar.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MenuBar",
            "code": "import React from 'react';\nimport { MenuBar } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MenuBar />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "instincthubchart": {
        "name": "InstinctHubChart",
        "description": "Versatile chart component supporting multiple chart types",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/charts/InstinctHubChart.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "chart",
          "visualization"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InstinctHubChart",
            "code": "import React from 'react';\nimport { InstinctHubChart } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InstinctHubChart />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "high",
          "memoryUsage": "medium",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "instincthubchartdashboard": {
        "name": "InstinctHubChartDashboard",
        "description": "Dashboard component showcasing multiple charts",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/charts/InstinctHubChartDashboard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "chart",
          "visualization"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of InstinctHubChartDashboard",
            "code": "import React from 'react';\nimport { InstinctHubChartDashboard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <InstinctHubChartDashboard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "high",
          "memoryUsage": "medium",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "chartconfigurator": {
        "name": "ChartConfigurator",
        "description": "Interactive chart configuration interface",
        "category": "UI",
        "type": "component",
        "filePath": "src/components/ui/charts/ChartConfigurator.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "ui",
          "chart",
          "visualization"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ChartConfigurator",
            "code": "import React from 'react';\nimport { ChartConfigurator } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChartConfigurator />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "CustomTextEditor",
          "ContentViewer",
          "ContentViewOrEdit",
          "CodeDisplay",
          "IHubTable"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css",
          "ui/action.css",
          "ui/badge.css",
          "ui/card.css",
          "ui/charts.css",
          "ui/dropdown-styles.css",
          "ui/tables.css",
          "ui/ui-index.css"
        ],
        "performance": {
          "renderComplexity": "high",
          "memoryUsage": "medium",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "changestylevariable": {
        "name": "ChangeStyleVariable",
        "description": "Style variable changer component",
        "category": "Theme",
        "type": "component",
        "filePath": "src/components/theme/ChangeStyleVariable.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "theme"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ChangeStyleVariable",
            "code": "import React from 'react';\nimport { ChangeStyleVariable } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ChangeStyleVariable />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "DarkModeProvider",
          "LoadingAnimate",
          "SessionProviders",
          "SessionExpiresLogout",
          "SignOutSession"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "darkmode.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "darkmodeprovider": {
        "name": "DarkModeProvider",
        "description": "Dark mode provider component",
        "category": "Theme",
        "type": "context",
        "filePath": "src/components/theme/DarkModeProvider.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "theme"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DarkModeProvider",
            "code": "import React from 'react';\nimport { DarkModeProvider } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DarkModeProvider />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChangeStyleVariable",
          "LoadingAnimate",
          "SessionProviders",
          "SessionExpiresLogout",
          "SignOutSession"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "darkmode.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "loadinganimate": {
        "name": "LoadingAnimate",
        "description": "Loading animation component",
        "category": "Theme",
        "type": "component",
        "filePath": "src/components/theme/LoadingAnimate.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "theme"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of LoadingAnimate",
            "code": "import React from 'react';\nimport { LoadingAnimate } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <LoadingAnimate />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChangeStyleVariable",
          "DarkModeProvider",
          "SessionProviders",
          "SessionExpiresLogout",
          "SignOutSession"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "darkmode.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "sessionproviders": {
        "name": "SessionProviders",
        "description": "Session providers component",
        "category": "Theme",
        "type": "context",
        "filePath": "src/components/theme/SessionProviders.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "theme"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SessionProviders",
            "code": "import React from 'react';\nimport { SessionProviders } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SessionProviders />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChangeStyleVariable",
          "DarkModeProvider",
          "LoadingAnimate",
          "SessionExpiresLogout",
          "SignOutSession"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "darkmode.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "sessionexpireslogout": {
        "name": "SessionExpiresLogout",
        "description": "Session expiration logout component",
        "category": "Theme",
        "type": "component",
        "filePath": "src/components/theme/signout/SessionExpiresLogout.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "theme"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SessionExpiresLogout",
            "code": "import React from 'react';\nimport { SessionExpiresLogout } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SessionExpiresLogout />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChangeStyleVariable",
          "DarkModeProvider",
          "LoadingAnimate",
          "SessionProviders",
          "SignOutSession"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "darkmode.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "signoutsession": {
        "name": "SignOutSession",
        "description": "Sign out session component",
        "category": "Theme",
        "type": "component",
        "filePath": "src/components/theme/signout/SignOutSession.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "theme"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SignOutSession",
            "code": "import React from 'react';\nimport { SignOutSession } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SignOutSession />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "ChangeStyleVariable",
          "DarkModeProvider",
          "LoadingAnimate",
          "SessionProviders",
          "SessionExpiresLogout"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "darkmode.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "timetracker": {
        "name": "TimeTracker",
        "description": "Time tracking component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/ReactTimeTracker.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of TimeTracker",
            "code": "import React from 'react';\nimport { TimeTracker } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TimeTracker />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "SessionHandleProvider",
          "Error500",
          "ErrorState",
          "ReactTimeTracker",
          "DeleteConfirmationModal"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "sessionhandleprovider": {
        "name": "SessionHandleProvider",
        "description": "Session handling provider component",
        "category": "Status",
        "type": "context",
        "filePath": "src/components/status/SessionHandleProvider.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of SessionHandleProvider",
            "code": "import React from 'react';\nimport { SessionHandleProvider } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <SessionHandleProvider />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "Error500",
          "ErrorState",
          "ReactTimeTracker",
          "DeleteConfirmationModal"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "error500": {
        "name": "Error500",
        "description": "500 error display component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/Error500.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Error500",
            "code": "import React from 'react';\nimport { Error500 } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Error500 />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "SessionHandleProvider",
          "ErrorState",
          "ReactTimeTracker",
          "DeleteConfirmationModal"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "errorstate": {
        "name": "ErrorState",
        "description": "Error state display component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/ErrorState.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ErrorState",
            "code": "import React from 'react';\nimport { ErrorState } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ErrorState />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ReactTimeTracker",
          "DeleteConfirmationModal"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "reacttimetracker": {
        "name": "ReactTimeTracker",
        "description": "React time tracking component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/ReactTimeTracker.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ReactTimeTracker",
            "code": "import React from 'react';\nimport { ReactTimeTracker } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ReactTimeTracker />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState",
          "DeleteConfirmationModal"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "deleteconfirmationmodal": {
        "name": "DeleteConfirmationModal",
        "description": "Delete confirmation modal component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/DeleteConfirmationModal.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status",
          "modal",
          "overlay"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of DeleteConfirmationModal",
            "code": "import React from 'react';\nimport { DeleteConfirmationModal } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <DeleteConfirmationModal />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Dialog",
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState"
        ],
        "usagePatterns": [
          "user-interaction",
          "overlay",
          "dialog"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals.css",
          "modals/modal.css",
          "modals/style.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "copytoclipboard": {
        "name": "CopyToClipboard",
        "description": "Copy to clipboard functionality component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/CopyToClipBoard.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CopyToClipboard",
            "code": "import React from 'react';\nimport { CopyToClipboard } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CopyToClipboard />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState",
          "ReactTimeTracker"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "multipurposemodal": {
        "name": "MultiPurposeModal",
        "description": "Multi-purpose modal component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/MultiPurposeModal.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status",
          "modal",
          "overlay"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MultiPurposeModal",
            "code": "import React from 'react';\nimport { MultiPurposeModal } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MultiPurposeModal />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Dialog",
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState"
        ],
        "usagePatterns": [
          "user-interaction",
          "overlay",
          "dialog"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals.css",
          "modals/modal.css",
          "modals/style.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "modalexamples": {
        "name": "ModalExamples",
        "description": "Modal examples component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/ModalExamples.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status",
          "modal",
          "overlay"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of ModalExamples",
            "code": "import React from 'react';\nimport { ModalExamples } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <ModalExamples />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Dialog",
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState"
        ],
        "usagePatterns": [
          "user-interaction",
          "overlay",
          "dialog"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals.css",
          "modals/modal.css",
          "modals/style.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "medium",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "notfound": {
        "name": "NotFound",
        "description": "Not found component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/NotFound.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of NotFound",
            "code": "import React from 'react';\nimport { NotFound } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <NotFound />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState",
          "ReactTimeTracker"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "unauthorized": {
        "name": "Unauthorized",
        "description": "Unauthorized component",
        "category": "Status",
        "type": "component",
        "filePath": "src/components/status/Unauthorized.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "status"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Unauthorized",
            "code": "import React from 'react';\nimport { Unauthorized } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Unauthorized />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "TimeTracker",
          "SessionHandleProvider",
          "Error500",
          "ErrorState",
          "ReactTimeTracker"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "modals/modal.css",
          "root.css",
          "status/error-state.css",
          "status/not-found.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "tabs": {
        "name": "Tabs",
        "description": "Tab navigation component",
        "category": "Tabs",
        "type": "component",
        "filePath": "src/components/tabs/Tabs.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "tabs"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 1",
            "description": "Usage example for Tabs",
            "code": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Tabs } from \"../../../../index\";\r\nimport { TabItemType } from \"@/types\";\r\n\r\nconst TabsExample: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<string>(\"profile\");\r\n  \r\n  const handleTabChange = (tabId: string) => {\r\n    setActiveTab(tabId);\r\n    console.log(`Tab changed to: ${tabId}`);\r\n  };\r\n\r\n  const tabItems = [\r\n    {\r\n      id: \"profile\",\r\n      label: \"Profile\",\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Profile Information</h3>\r\n          <p>This is the profile tab content. Here you can display user profile information.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"security\",\r\n      label: \"Security\",\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Security Settings</h3>\r\n          <p>Change your password and security preferences here.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"notifications\",\r\n      label: \"Notifications\",\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Notification Preferences</h3>\r\n          <p>Manage your notification settings and preferences.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"billing\",\r\n      label: \"Billing\",\r\n      disabled: true,\r\n      content: (\r\n        <div className=\"ihub-py-4\">\r\n          <h3>Billing Information</h3>\r\n          <p>View and manage your billing settings.</p>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ihub-container\">\r\n      <h2>Default Tabs</h2>\r\n      <Tabs \r\n        items={tabItems} \r\n        defaultActiveTab={activeTab}\r\n        onChange={(tabId: TabItemType) => handleTabChange(tabId.id)}\r\n      />\r\n      \r\n      <h2 className=\"ihub-mt-8\">Bordered Tabs</h2>\r\n      <Tabs \r\n        items={tabItems} \r\n        defaultActiveTab=\"security\"\r\n        variant=\"bordered\"\r\n      />\r\n      \r\n      <h2 className=\"ihub-mt-8\">Pills Tabs</h2>\r\n      <Tabs \r\n        items={tabItems} \r\n        defaultActiveTab=\"notifications\"\r\n        variant=\"pills\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsExample;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "VerticalTabs",
          "TabContent"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tabs/main.css",
          "tabs/style.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "verticaltabs": {
        "name": "VerticalTabs",
        "description": "Vertical tab navigation component",
        "category": "Tabs",
        "type": "component",
        "filePath": "src/components/tabs/VerticalTabs.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "tabs"
        ],
        "props": [],
        "examples": [
          {
            "title": "Example 1",
            "description": "Usage example for VerticalTabs",
            "code": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n// Import icons (assuming you're using a library like Lucide or similar)\r\nimport { \r\n  User, \r\n  Shield, \r\n  Bell, \r\n  CreditCard, \r\n  Settings, \r\n  HelpCircle \r\n} from \"lucide-react\";\r\nimport VerticalTabs from \"../../../../components/tabs/VerticalTabs\";\r\nimport { VerticalTabItemType } from \"@/types\";\r\n\r\nconst VerticalTabsExample: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<string>(\"profile\");\r\n  \r\n  const handleTabChange = (tabId: string) => {\r\n    setActiveTab(tabId);\r\n    console.log(`Tab changed to: ${tabId}`);\r\n  };\r\n\r\n  const tabItems = [\r\n    {\r\n      id: \"profile\",\r\n      label: \"Profile\",\r\n      icon: <User size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Profile Information</h3>\r\n          <p>Manage your personal information, profile picture, and public details.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Personal Details</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <p>Name: John Doe</p>\r\n              <p>Email: john.doe@example.com</p>\r\n              <p>Location: New York, USA</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"security\",\r\n      label: \"Security\",\r\n      icon: <Shield size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Security Settings</h3>\r\n          <p>Manage your password, two-factor authentication, and security preferences.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Password</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <p>Last changed: 30 days ago</p>\r\n              <button className=\"ihub-important-btn ihub-mt-2\">Change Password</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"notifications\",\r\n      label: \"Notifications\",\r\n      icon: <Bell size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Notification Preferences</h3>\r\n          <p>Control which notifications you receive and how they are delivered.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Email Notifications</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <div className=\"ihub-mb-2\">\r\n                <input type=\"checkbox\" id=\"updates\" checked />\r\n                <label htmlFor=\"updates\" className=\"ihub-ml-2\">Product Updates</label>\r\n              </div>\r\n              <div className=\"ihub-mb-2\">\r\n                <input type=\"checkbox\" id=\"news\" checked />\r\n                <label htmlFor=\"news\" className=\"ihub-ml-2\">InstinctHub News</label>\r\n              </div>\r\n              <div className=\"ihub-mb-2\">\r\n                <input type=\"checkbox\" id=\"activity\" />\r\n                <label htmlFor=\"activity\" className=\"ihub-ml-2\">Account Activity</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"billing\",\r\n      label: \"Billing\",\r\n      icon: <CreditCard size={18} />,\r\n      disabled: true,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Billing Information</h3>\r\n          <p>View and manage your subscription, payment methods, and billing history.</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"settings\",\r\n      label: \"Settings\",\r\n      icon: <Settings size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Account Settings</h3>\r\n          <p>Manage your account preferences, language, and other settings.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Language & Region</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <div className=\"ihub-mb-3\">\r\n                <label className=\"ihub-mb-1 ihub-block\">Language</label>\r\n                <select className=\"ihub-p-2 ihub-w-full\">\r\n                  <option>English</option>\r\n                  <option>French</option>\r\n                  <option>Spanish</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"ihub-mb-1 ihub-block\">Time Zone</label>\r\n                <select className=\"ihub-p-2 ihub-w-full\">\r\n                  <option>UTC (Coordinated Universal Time)</option>\r\n                  <option>EST (Eastern Standard Time)</option>\r\n                  <option>PST (Pacific Standard Time)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      id: \"help\",\r\n      label: \"Help & Support\",\r\n      icon: <HelpCircle size={18} />,\r\n      content: (\r\n        <div className=\"ihub-p-4\">\r\n          <h3 className=\"ihub-mb-4\">Help & Support</h3>\r\n          <p>Get assistance with using InstinctHub products and services.</p>\r\n          \r\n          <div className=\"ihub-mt-6\">\r\n            <h4 className=\"ihub-mb-2\">Support Options</h4>\r\n            <div className=\"ihub-p-4 ihub-bg-white\">\r\n              <div className=\"ihub-mb-3\">\r\n                <h5 className=\"ihub-font-semibold\">Documentation</h5>\r\n                <p>Browse our comprehensive documentation for guides and tutorials.</p>\r\n                <a href=\"#\" className=\"ihub-text-cyan-700 ihub-font-semibold\">View Documentation</a>\r\n              </div>\r\n              <div className=\"ihub-mb-3\">\r\n                <h5 className=\"ihub-font-semibold\">Contact Support</h5>\r\n                <p>Get in touch with our support team for personalized help.</p>\r\n                <button className=\"ihub-outlined-btn ihub-mt-2\">Contact Support</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"ihub-container\">\r\n      <h2 className=\"ihub-mb-6\">Account Management</h2>\r\n      <VerticalTabs \r\n        items={tabItems} \r\n        defaultActiveTab={activeTab}\r\n        onChange={(tabId: VerticalTabItemType) => handleTabChange(tabId.id as string)}\r\n        className=\"ihub-border ihub-rounded-lg ihub-p-6 ihub-bg-white ihub-shadow-sm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalTabsExample;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Tabs",
          "TabContent"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tabs/main.css",
          "tabs/style.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "tabcontent": {
        "name": "TabContent",
        "description": "Tab content display component",
        "category": "Tabs",
        "type": "component",
        "filePath": "src/components/tabs/TabContent.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "tabs"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of TabContent",
            "code": "import React from 'react';\nimport { TabContent } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <TabContent />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Tabs",
          "VerticalTabs"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tabs/main.css",
          "tabs/style.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "cursor": {
        "name": "Cursor",
        "description": "Custom cursor component with trailing effects and animations",
        "category": "Cursors",
        "type": "component",
        "filePath": "src/components/cursors/Cursor.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "cursors"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Cursor",
            "code": "import React from 'react';\nimport { Cursor } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Cursor />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "MagneticButton",
          "CursorContext",
          "useCursorInteraction",
          "CursorControlDemo"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "cursors/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "magneticbutton": {
        "name": "MagneticButton",
        "description": "Button component with magnetic cursor attraction effect",
        "category": "Cursors",
        "type": "component",
        "filePath": "src/components/cursors/MagneticButton.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "cursors",
          "button",
          "action"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of MagneticButton",
            "code": "import React from 'react';\nimport { MagneticButton } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <MagneticButton />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "SubmitButton",
          "ToggleButton",
          "RadioButton",
          "CreateButton",
          "CreateButtonExample"
        ],
        "usagePatterns": [
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "cursors/style.css",
          "forms/submit-button.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": true,
          "keyboardNavigation": true,
          "screenReaderSupport": false,
          "focusManagement": true
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "cursorcontext": {
        "name": "CursorContext",
        "description": "Context provider for cursor state management across the application",
        "category": "Cursors",
        "type": "context",
        "filePath": "src/components/cursors/CursorContext.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "cursors"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CursorContext",
            "code": "import React from 'react';\nimport { CursorContext } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CursorContext />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Cursor",
          "MagneticButton",
          "useCursorInteraction",
          "CursorControlDemo"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "cursors/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "usecursorinteraction": {
        "name": "useCursorInteraction",
        "description": "Hook for adding interactive cursor effects to elements",
        "category": "Cursors",
        "type": "hook",
        "filePath": "src/components/cursors/useCursorInteraction.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "cursors"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of useCursorInteraction",
            "code": "import React from 'react';\nimport { useCursorInteraction } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <useCursorInteraction />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Cursor",
          "MagneticButton",
          "CursorContext",
          "CursorControlDemo"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "cursors/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "cursorcontroldemo": {
        "name": "CursorControlDemo",
        "description": "Comprehensive demo component for the cursor system",
        "category": "Cursors",
        "type": "component",
        "filePath": "src/components/cursors/CursorControlDemo.tsx",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "cursors"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of CursorControlDemo",
            "code": "import React from 'react';\nimport { CursorControlDemo } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <CursorControlDemo />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [
          "Cursor",
          "MagneticButton",
          "CursorContext",
          "useCursorInteraction"
        ],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "cursors/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      },
      "paystack": {
        "name": "Paystack",
        "description": "Paystack payment integration component",
        "category": "Library",
        "type": "component",
        "filePath": "src/components/lib/readme/paystack.md",
        "importPath": "@instincthub/react-ui",
        "tags": [
          "library"
        ],
        "props": [],
        "examples": [
          {
            "title": "Basic Usage",
            "description": "Basic implementation of Paystack",
            "code": "import React from 'react';\nimport { Paystack } from '@instincthub/react-ui';\n\nfunction MyComponent() {\n  return (\n    <Paystack />\n  );\n}\n\nexport default MyComponent;",
            "framework": "react"
          }
        ],
        "relatedComponents": [],
        "usagePatterns": [],
        "dependencies": [],
        "styleRequirements": [
          "bootstrap/style.css",
          "main.css",
          "root.css",
          "tag-only-selectors.css"
        ],
        "performance": {
          "renderComplexity": "low",
          "memoryUsage": "low",
          "rerenderTriggers": [
            "props",
            "state",
            "context"
          ]
        },
        "accessibility": {
          "ariaSupport": false,
          "keyboardNavigation": false,
          "screenReaderSupport": false,
          "focusManagement": false
        },
        "testing": {
          "hasTests": false,
          "testExamples": [],
          "mockRequirements": [
            "react-testing-library",
            "@testing-library/jest-dom"
          ]
        }
      }
    },
    "byCategory": {
      "Forms": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "DropFile",
        "EmailList",
        "FilterArray",
        "FilterBy",
        "FilterObjects",
        "FormError",
        "HandleError",
        "Logout",
        "MessageDisplay",
        "MultipleEmail",
        "PageLoading",
        "PhoneNumberInput",
        "RadioField",
        "RadioSimple",
        "ReactTimeAgo",
        "ReadTermsAndCondition",
        "SearchField",
        "SearchFieldDB",
        "StepProgressBar",
        "SubmitButton",
        "Tables",
        "TextArea",
        "TextField",
        "Tooltip",
        "UnsplashRandomImage",
        "DownloadAsExcel",
        "THeadSortBtn",
        "THeadSortList",
        "TBodyNoData",
        "FileUploader",
        "IhubFileUploader",
        "ActionCallbackDropdown"
      ],
      "Form": [
        "InputNumber",
        "InputText",
        "InputTextarea",
        "SearchObjectsFromDB",
        "ToggleButton",
        "DateInputPicker",
        "ChipsInput",
        "RadioButton",
        "RadioGroup",
        "InputAmount",
        "CheckBoxes",
        "CheckBoxesField",
        "CountryInput",
        "CountryStateInput",
        "InputSearchDropdown"
      ],
      "Auth": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm",
        "SignUpForm",
        "ReactClientProviders",
        "ClientOnly",
        "useClientSide",
        "useFormattedDate",
        "useStableRandom",
        "useExternalData"
      ],
      "Navbar": [
        "ChannelListAvatar",
        "MenuDropdown",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "UI": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable",
        "IHubTableServer",
        "OrDivider",
        "Card",
        "CardList",
        "CardGrid",
        "HorizontalCard",
        "FeatureCard",
        "MediaCard",
        "PricingCard",
        "ProfileCard",
        "RandomGradientImage",
        "Dialog",
        "Badge",
        "Action",
        "Dropdown",
        "ColorPicker",
        "Pagination",
        "PaginationDemo",
        "CreateButton",
        "CreateButtonExample",
        "MenuBar",
        "InstinctHubChart",
        "InstinctHubChartDashboard",
        "ChartConfigurator"
      ],
      "Theme": [
        "ChangeStyleVariable",
        "DarkModeProvider",
        "LoadingAnimate",
        "SessionProviders",
        "SessionExpiresLogout",
        "SignOutSession"
      ],
      "Status": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "ReactTimeTracker",
        "DeleteConfirmationModal",
        "CopyToClipboard",
        "MultiPurposeModal",
        "ModalExamples",
        "NotFound",
        "Unauthorized"
      ],
      "Tabs": [
        "Tabs",
        "VerticalTabs",
        "TabContent"
      ],
      "Cursors": [
        "Cursor",
        "MagneticButton",
        "CursorContext",
        "useCursorInteraction",
        "CursorControlDemo"
      ],
      "Library": [
        "Paystack"
      ]
    },
    "byTags": {
      "forms": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "DropFile",
        "EmailList",
        "FilterArray",
        "FilterBy",
        "FilterObjects",
        "FormError",
        "HandleError",
        "Logout",
        "MessageDisplay",
        "MultipleEmail",
        "PageLoading",
        "PhoneNumberInput",
        "RadioField",
        "RadioSimple",
        "ReactTimeAgo",
        "ReadTermsAndCondition",
        "SearchField",
        "SearchFieldDB",
        "StepProgressBar",
        "SubmitButton",
        "Tables",
        "TextArea",
        "TextField",
        "Tooltip",
        "UnsplashRandomImage",
        "DownloadAsExcel",
        "THeadSortBtn",
        "THeadSortList",
        "TBodyNoData",
        "FileUploader",
        "IhubFileUploader",
        "ActionCallbackDropdown"
      ],
      "input": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField",
        "SearchField",
        "SearchFieldDB",
        "TextField",
        "InputNumber",
        "InputText",
        "InputTextarea",
        "DateInputPicker",
        "ChipsInput",
        "InputAmount",
        "CheckBoxesField",
        "CountryInput",
        "CountryStateInput",
        "InputSearchDropdown"
      ],
      "form": [
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "PhoneNumberInput",
        "RadioField",
        "SearchField",
        "SearchFieldDB",
        "TextField",
        "InputNumber",
        "InputNumber",
        "InputText",
        "InputText",
        "InputTextarea",
        "InputTextarea",
        "SearchObjectsFromDB",
        "ToggleButton",
        "DateInputPicker",
        "DateInputPicker",
        "ChipsInput",
        "ChipsInput",
        "RadioButton",
        "RadioGroup",
        "InputAmount",
        "InputAmount",
        "CheckBoxes",
        "CheckBoxesField",
        "CheckBoxesField",
        "CountryInput",
        "CountryInput",
        "CountryStateInput",
        "CountryStateInput",
        "InputSearchDropdown",
        "InputSearchDropdown"
      ],
      "button": [
        "SubmitButton",
        "ToggleButton",
        "RadioButton",
        "CreateButton",
        "CreateButtonExample",
        "MagneticButton"
      ],
      "action": [
        "SubmitButton",
        "ToggleButton",
        "RadioButton",
        "CreateButton",
        "CreateButtonExample",
        "MagneticButton"
      ],
      "table": [
        "Tables",
        "IHubTable",
        "IHubTableServer"
      ],
      "data": [
        "Tables",
        "IHubTable",
        "IHubTableServer"
      ],
      "auth": [
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm",
        "SignUpForm",
        "ReactClientProviders",
        "ClientOnly",
        "useClientSide",
        "useFormattedDate",
        "useStableRandom",
        "useExternalData"
      ],
      "navbar": [
        "ChannelListAvatar",
        "MenuDropdown",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "navigation": [
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "menu": [
        "ResponsiveNavbar",
        "SideNavbar",
        "SideNavbarContext"
      ],
      "ui": [
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable",
        "IHubTableServer",
        "OrDivider",
        "Card",
        "CardList",
        "CardGrid",
        "HorizontalCard",
        "FeatureCard",
        "MediaCard",
        "PricingCard",
        "ProfileCard",
        "RandomGradientImage",
        "Dialog",
        "Badge",
        "Action",
        "Dropdown",
        "ColorPicker",
        "Pagination",
        "PaginationDemo",
        "CreateButton",
        "CreateButtonExample",
        "MenuBar",
        "InstinctHubChart",
        "InstinctHubChartDashboard",
        "ChartConfigurator"
      ],
      "modal": [
        "Dialog",
        "DeleteConfirmationModal",
        "MultiPurposeModal",
        "ModalExamples"
      ],
      "overlay": [
        "Dialog",
        "DeleteConfirmationModal",
        "MultiPurposeModal",
        "ModalExamples"
      ],
      "chart": [
        "InstinctHubChart",
        "InstinctHubChartDashboard",
        "ChartConfigurator"
      ],
      "visualization": [
        "InstinctHubChart",
        "InstinctHubChartDashboard",
        "ChartConfigurator"
      ],
      "theme": [
        "ChangeStyleVariable",
        "DarkModeProvider",
        "LoadingAnimate",
        "SessionProviders",
        "SessionExpiresLogout",
        "SignOutSession"
      ],
      "status": [
        "TimeTracker",
        "SessionHandleProvider",
        "Error500",
        "ErrorState",
        "ReactTimeTracker",
        "DeleteConfirmationModal",
        "CopyToClipboard",
        "MultiPurposeModal",
        "ModalExamples",
        "NotFound",
        "Unauthorized"
      ],
      "tabs": [
        "Tabs",
        "VerticalTabs",
        "TabContent"
      ],
      "cursors": [
        "Cursor",
        "MagneticButton",
        "CursorContext",
        "useCursorInteraction",
        "CursorControlDemo"
      ],
      "library": [
        "Paystack"
      ]
    },
    "byType": {
      "component": [
        "ActionDropdown",
        "AnimatedBox",
        "PasswordField",
        "DateInput",
        "DateTimeInput",
        "DropFile",
        "EmailList",
        "FilterArray",
        "FilterBy",
        "FilterObjects",
        "FormError",
        "HandleError",
        "Logout",
        "MessageDisplay",
        "MultipleEmail",
        "PageLoading",
        "PhoneNumberInput",
        "RadioField",
        "RadioSimple",
        "ReactTimeAgo",
        "ReadTermsAndCondition",
        "SearchField",
        "SearchFieldDB",
        "StepProgressBar",
        "SubmitButton",
        "Tables",
        "TextArea",
        "TextField",
        "Tooltip",
        "UnsplashRandomImage",
        "DownloadAsExcel",
        "THeadSortBtn",
        "THeadSortList",
        "TBodyNoData",
        "FileUploader",
        "IhubFileUploader",
        "ActionCallbackDropdown",
        "InputNumber",
        "InputText",
        "InputTextarea",
        "SearchObjectsFromDB",
        "ToggleButton",
        "DateInputPicker",
        "ChipsInput",
        "RadioButton",
        "RadioGroup",
        "InputAmount",
        "CheckBoxes",
        "CheckBoxesField",
        "CountryInput",
        "CountryStateInput",
        "InputSearchDropdown",
        "IsUsernameEmailTaken",
        "ClientDetector",
        "PasswordsMatch",
        "FromInstinctHub",
        "LoginForm",
        "SignUpForm",
        "ClientOnly",
        "ChannelListAvatar",
        "MenuDropdown",
        "Breadcrumb",
        "ResponsiveNavbar",
        "SideNavbar",
        "CustomTextEditor",
        "ContentViewer",
        "ContentViewOrEdit",
        "CodeDisplay",
        "IHubTable",
        "IHubTableServer",
        "OrDivider",
        "Card",
        "CardList",
        "CardGrid",
        "HorizontalCard",
        "FeatureCard",
        "MediaCard",
        "PricingCard",
        "ProfileCard",
        "RandomGradientImage",
        "Dialog",
        "Badge",
        "Action",
        "Dropdown",
        "ColorPicker",
        "Pagination",
        "PaginationDemo",
        "CreateButton",
        "CreateButtonExample",
        "MenuBar",
        "InstinctHubChart",
        "InstinctHubChartDashboard",
        "ChartConfigurator",
        "ChangeStyleVariable",
        "LoadingAnimate",
        "SessionExpiresLogout",
        "SignOutSession",
        "TimeTracker",
        "Error500",
        "ErrorState",
        "ReactTimeTracker",
        "DeleteConfirmationModal",
        "CopyToClipboard",
        "MultiPurposeModal",
        "ModalExamples",
        "NotFound",
        "Unauthorized",
        "Tabs",
        "VerticalTabs",
        "TabContent",
        "Cursor",
        "MagneticButton",
        "CursorControlDemo",
        "Paystack"
      ],
      "context": [
        "ReactClientProviders",
        "SideNavbarContext",
        "DarkModeProvider",
        "SessionProviders",
        "SessionHandleProvider",
        "CursorContext"
      ],
      "hook": [
        "useClientSide",
        "useFormattedDate",
        "useStableRandom",
        "useExternalData",
        "useCursorInteraction"
      ]
    },
    "fuzzySearch": [
      {
        "component": "ActionDropdown",
        "keywords": [
          "actiondropdown",
          "dropdown component for actions",
          "forms"
        ],
        "alternatives": [
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "dropfile"
        ]
      },
      {
        "component": "AnimatedBox",
        "keywords": [
          "animatedbox",
          "animated container component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "dropfile"
        ]
      },
      {
        "component": "PasswordField",
        "keywords": [
          "passwordfield",
          "secure password input field",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "dateinput",
          "datetimeinput",
          "dropfile"
        ]
      },
      {
        "component": "DateInput",
        "keywords": [
          "dateinput",
          "date selection input field",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "datetimeinput",
          "dropfile"
        ]
      },
      {
        "component": "DateTimeInput",
        "keywords": [
          "datetimeinput",
          "date and time selection input field",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "dropfile"
        ]
      },
      {
        "component": "DropFile",
        "keywords": [
          "dropfile",
          "file drag and drop component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "EmailList",
        "keywords": [
          "emaillist",
          "email list display component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "FilterArray",
        "keywords": [
          "filterarray",
          "array filtering component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "FilterBy",
        "keywords": [
          "filterby",
          "filtering component with criteria",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "FilterObjects",
        "keywords": [
          "filterobjects",
          "object filtering component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "FormError",
        "keywords": [
          "formerror",
          "form error display component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "HandleError",
        "keywords": [
          "handleerror",
          "error handling component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "Logout",
        "keywords": [
          "logout",
          "logout functionality component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "MessageDisplay",
        "keywords": [
          "messagedisplay",
          "message display component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "MultipleEmail",
        "keywords": [
          "multipleemail",
          "multiple email input component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "PageLoading",
        "keywords": [
          "pageloading",
          "page loading indicator component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "PhoneNumberInput",
        "keywords": [
          "phonenumberinput",
          "phone number input with formatting",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "RadioField",
        "keywords": [
          "radiofield",
          "radio button input field",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "RadioSimple",
        "keywords": [
          "radiosimple",
          "simplified radio button component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "ReactTimeAgo",
        "keywords": [
          "reacttimeago",
          "time ago display component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "ReadTermsAndCondition",
        "keywords": [
          "readtermsandcondition",
          "terms and conditions acceptance component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "SearchField",
        "keywords": [
          "searchfield",
          "search input field component",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "SearchFieldDB",
        "keywords": [
          "searchfielddb",
          "database search field component",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "StepProgressBar",
        "keywords": [
          "stepprogressbar",
          "step progress indicator component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "SubmitButton",
        "keywords": [
          "submitbutton",
          "form submission button component",
          "forms",
          "button",
          "action",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "Tables",
        "keywords": [
          "tables",
          "table display component",
          "forms",
          "table",
          "data",
          "data-display",
          "sorting",
          "pagination"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "TextArea",
        "keywords": [
          "textarea",
          "multi-line text input component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "TextField",
        "keywords": [
          "textfield",
          "text input field component",
          "forms",
          "input",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "Tooltip",
        "keywords": [
          "tooltip",
          "tooltip display component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "UnsplashRandomImage",
        "keywords": [
          "unsplashrandomimage",
          "random image from unsplash component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "DownloadAsExcel",
        "keywords": [
          "downloadasexcel",
          "excel download functionality component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "THeadSortBtn",
        "keywords": [
          "theadsortbtn",
          "table header sort button component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "THeadSortList",
        "keywords": [
          "theadsortlist",
          "table header sort list component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "TBodyNoData",
        "keywords": [
          "tbodynodata",
          "table body empty state component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "FileUploader",
        "keywords": [
          "fileuploader",
          "file upload component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "IhubFileUploader",
        "keywords": [
          "ihubfileuploader",
          "instincthub file upload component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "ActionCallbackDropdown",
        "keywords": [
          "actioncallbackdropdown",
          "action callback dropdown component",
          "forms"
        ],
        "alternatives": [
          "actiondropdown",
          "animatedbox",
          "passwordfield",
          "dateinput",
          "datetimeinput"
        ]
      },
      {
        "component": "InputNumber",
        "keywords": [
          "inputnumber",
          "inputnumber component for numerical input",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "InputText",
        "keywords": [
          "inputtext",
          "inputtext component for text input",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "InputTextarea",
        "keywords": [
          "inputtextarea",
          "inputtextarea component for text input",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "SearchObjectsFromDB",
        "keywords": [
          "searchobjectsfromdb",
          "searchobjectsfromdb component for searching objects from database",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "ToggleButton",
        "keywords": [
          "togglebutton",
          "togglebutton component for changing state.",
          "form",
          "button",
          "action",
          "form-building",
          "data-input",
          "validation",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "DateInputPicker",
        "keywords": [
          "dateinputpicker",
          "dateinputpicker component for picking date and time.",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "ChipsInput",
        "keywords": [
          "chipsinput",
          "chipsinput is used to enter multiple values on an input field.",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "RadioButton",
        "keywords": [
          "radiobutton",
          "radiobutton is used to enter single value on an input field.",
          "form",
          "button",
          "action",
          "form-building",
          "data-input",
          "validation",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "RadioGroup",
        "keywords": [
          "radiogroup",
          "radiogroup is used to select each from group value on an input field.",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "InputAmount",
        "keywords": [
          "inputamount",
          "inputamount is used to enter amount on an input field.",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "CheckBoxes",
        "keywords": [
          "checkboxes",
          "checkboxes is used to enter multiple values on an input field.",
          "form",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "CheckBoxesField",
        "keywords": [
          "checkboxesfield",
          "checkboxesfield is used to enter multiple values on an input field.",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "CountryInput",
        "keywords": [
          "countryinput",
          "searchable country selector input field",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "CountryStateInput",
        "keywords": [
          "countrystateinput",
          "searchable state/province selector based on selected country",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "InputSearchDropdown",
        "keywords": [
          "inputsearchdropdown",
          "generic searchable dropdown component for organizations",
          "form",
          "input",
          "form-building",
          "data-input",
          "validation"
        ],
        "alternatives": [
          "passwordfield",
          "dateinput",
          "datetimeinput",
          "phonenumberinput",
          "radiofield"
        ]
      },
      {
        "component": "IsUsernameEmailTaken",
        "keywords": [
          "isusernameemailtaken",
          "username/email availability checker",
          "auth"
        ],
        "alternatives": [
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform",
          "signupform"
        ]
      },
      {
        "component": "ClientDetector",
        "keywords": [
          "clientdetector",
          "client device detection component",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "passwordsmatch",
          "frominstincthub",
          "loginform",
          "signupform"
        ]
      },
      {
        "component": "PasswordsMatch",
        "keywords": [
          "passwordsmatch",
          "password matching validation component",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "frominstincthub",
          "loginform",
          "signupform"
        ]
      },
      {
        "component": "FromInstinctHub",
        "keywords": [
          "frominstincthub",
          "from instincthub component",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "loginform",
          "signupform"
        ]
      },
      {
        "component": "LoginForm",
        "keywords": [
          "loginform",
          "login form component",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "signupform"
        ]
      },
      {
        "component": "SignUpForm",
        "keywords": [
          "signupform",
          "sign up form component",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "ReactClientProviders",
        "keywords": [
          "reactclientproviders",
          "comprehensive wrapper providing all essential react providers",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "ClientOnly",
        "keywords": [
          "clientonly",
          "wrapper component that only renders children on client side",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "useClientSide",
        "keywords": [
          "useclientside",
          "hook for safely handling client-side initialization",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "useFormattedDate",
        "keywords": [
          "useformatteddate",
          "hook for consistent date formatting between server and client",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "useStableRandom",
        "keywords": [
          "usestablerandom",
          "hook for generating stable random values",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "useExternalData",
        "keywords": [
          "useexternaldata",
          "hook for safely handling external data to prevent hydration mismatches",
          "auth"
        ],
        "alternatives": [
          "isusernameemailtaken",
          "clientdetector",
          "passwordsmatch",
          "frominstincthub",
          "loginform"
        ]
      },
      {
        "component": "ChannelListAvatar",
        "keywords": [
          "channellistavatar",
          "channel list avatar component",
          "navbar"
        ],
        "alternatives": [
          "menudropdown",
          "breadcrumb",
          "responsivenavbar",
          "sidenavbar",
          "sidenavbarcontext"
        ]
      },
      {
        "component": "MenuDropdown",
        "keywords": [
          "menudropdown",
          "menu dropdown component",
          "navbar"
        ],
        "alternatives": [
          "channellistavatar",
          "breadcrumb",
          "responsivenavbar",
          "sidenavbar",
          "sidenavbarcontext"
        ]
      },
      {
        "component": "Breadcrumb",
        "keywords": [
          "breadcrumb",
          "breadcrumb component",
          "navbar"
        ],
        "alternatives": [
          "channellistavatar",
          "menudropdown",
          "responsivenavbar",
          "sidenavbar",
          "sidenavbarcontext"
        ]
      },
      {
        "component": "ResponsiveNavbar",
        "keywords": [
          "responsivenavbar",
          "responsive navbar component",
          "navbar",
          "navigation",
          "menu",
          "routing",
          "menu-navigation",
          "breadcrumbs"
        ],
        "alternatives": [
          "channellistavatar",
          "menudropdown",
          "breadcrumb",
          "sidenavbar",
          "sidenavbarcontext"
        ]
      },
      {
        "component": "SideNavbar",
        "keywords": [
          "sidenavbar",
          "side navbar component",
          "navbar",
          "navigation",
          "menu",
          "routing",
          "menu-navigation",
          "breadcrumbs"
        ],
        "alternatives": [
          "channellistavatar",
          "menudropdown",
          "breadcrumb",
          "responsivenavbar",
          "sidenavbarcontext"
        ]
      },
      {
        "component": "SideNavbarContext",
        "keywords": [
          "sidenavbarcontext",
          "context provider for side navigation state management",
          "navbar",
          "navigation",
          "menu",
          "routing",
          "menu-navigation",
          "breadcrumbs"
        ],
        "alternatives": [
          "channellistavatar",
          "menudropdown",
          "breadcrumb",
          "responsivenavbar",
          "sidenavbar"
        ]
      },
      {
        "component": "CustomTextEditor",
        "keywords": [
          "customtexteditor",
          "custom text editor component",
          "ui"
        ],
        "alternatives": [
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable",
          "ihubtableserver"
        ]
      },
      {
        "component": "ContentViewer",
        "keywords": [
          "contentviewer",
          "content viewer component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentvieworedit",
          "codedisplay",
          "ihubtable",
          "ihubtableserver"
        ]
      },
      {
        "component": "ContentViewOrEdit",
        "keywords": [
          "contentvieworedit",
          "content view or edit component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "codedisplay",
          "ihubtable",
          "ihubtableserver"
        ]
      },
      {
        "component": "CodeDisplay",
        "keywords": [
          "codedisplay",
          "code display component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "ihubtable",
          "ihubtableserver"
        ]
      },
      {
        "component": "IHubTable",
        "keywords": [
          "ihubtable",
          "instincthub table component",
          "ui",
          "table",
          "data",
          "data-display",
          "sorting",
          "pagination"
        ],
        "alternatives": [
          "tables",
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay"
        ]
      },
      {
        "component": "IHubTableServer",
        "keywords": [
          "ihubtableserver",
          "instincthub server table component",
          "ui",
          "table",
          "data",
          "data-display",
          "sorting",
          "pagination"
        ],
        "alternatives": [
          "tables",
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay"
        ]
      },
      {
        "component": "OrDivider",
        "keywords": [
          "ordivider",
          "or divider component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "Card",
        "keywords": [
          "card",
          "card component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "CardList",
        "keywords": [
          "cardlist",
          "card list component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "CardGrid",
        "keywords": [
          "cardgrid",
          "card grid component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "HorizontalCard",
        "keywords": [
          "horizontalcard",
          "horizontal card component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "FeatureCard",
        "keywords": [
          "featurecard",
          "feature card component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "MediaCard",
        "keywords": [
          "mediacard",
          "media card component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "PricingCard",
        "keywords": [
          "pricingcard",
          "pricing card component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "ProfileCard",
        "keywords": [
          "profilecard",
          "profile card component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "RandomGradientImage",
        "keywords": [
          "randomgradientimage",
          "random gradient image component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "Dialog",
        "keywords": [
          "dialog",
          "a reusable dialog component",
          "ui",
          "modal",
          "overlay",
          "user-interaction"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "Badge",
        "keywords": [
          "badge",
          "a reusable badge component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "Action",
        "keywords": [
          "action",
          "a reusable action component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "Dropdown",
        "keywords": [
          "dropdown",
          "a reusable dropdown component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "ColorPicker",
        "keywords": [
          "colorpicker",
          "a reusable colorpicker component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "Pagination",
        "keywords": [
          "pagination",
          "a reusable pagination component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "PaginationDemo",
        "keywords": [
          "paginationdemo",
          "a demo for the pagination component",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "CreateButton",
        "keywords": [
          "createbutton",
          "a reusable createbutton component",
          "ui",
          "button",
          "action",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "alternatives": [
          "submitbutton",
          "togglebutton",
          "radiobutton",
          "customtexteditor",
          "contentviewer"
        ]
      },
      {
        "component": "CreateButtonExample",
        "keywords": [
          "createbuttonexample",
          "an example of the createbutton component",
          "ui",
          "button",
          "action",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "alternatives": [
          "submitbutton",
          "togglebutton",
          "radiobutton",
          "customtexteditor",
          "contentviewer"
        ]
      },
      {
        "component": "MenuBar",
        "keywords": [
          "menubar",
          "toolbar component for the tiptap rich text editor",
          "ui"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "InstinctHubChart",
        "keywords": [
          "instincthubchart",
          "versatile chart component supporting multiple chart types",
          "ui",
          "chart",
          "visualization"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "InstinctHubChartDashboard",
        "keywords": [
          "instincthubchartdashboard",
          "dashboard component showcasing multiple charts",
          "ui",
          "chart",
          "visualization"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "ChartConfigurator",
        "keywords": [
          "chartconfigurator",
          "interactive chart configuration interface",
          "ui",
          "chart",
          "visualization"
        ],
        "alternatives": [
          "customtexteditor",
          "contentviewer",
          "contentvieworedit",
          "codedisplay",
          "ihubtable"
        ]
      },
      {
        "component": "ChangeStyleVariable",
        "keywords": [
          "changestylevariable",
          "style variable changer component",
          "theme"
        ],
        "alternatives": [
          "darkmodeprovider",
          "loadinganimate",
          "sessionproviders",
          "sessionexpireslogout",
          "signoutsession"
        ]
      },
      {
        "component": "DarkModeProvider",
        "keywords": [
          "darkmodeprovider",
          "dark mode provider component",
          "theme"
        ],
        "alternatives": [
          "changestylevariable",
          "loadinganimate",
          "sessionproviders",
          "sessionexpireslogout",
          "signoutsession"
        ]
      },
      {
        "component": "LoadingAnimate",
        "keywords": [
          "loadinganimate",
          "loading animation component",
          "theme"
        ],
        "alternatives": [
          "changestylevariable",
          "darkmodeprovider",
          "sessionproviders",
          "sessionexpireslogout",
          "signoutsession"
        ]
      },
      {
        "component": "SessionProviders",
        "keywords": [
          "sessionproviders",
          "session providers component",
          "theme"
        ],
        "alternatives": [
          "changestylevariable",
          "darkmodeprovider",
          "loadinganimate",
          "sessionexpireslogout",
          "signoutsession"
        ]
      },
      {
        "component": "SessionExpiresLogout",
        "keywords": [
          "sessionexpireslogout",
          "session expiration logout component",
          "theme"
        ],
        "alternatives": [
          "changestylevariable",
          "darkmodeprovider",
          "loadinganimate",
          "sessionproviders",
          "signoutsession"
        ]
      },
      {
        "component": "SignOutSession",
        "keywords": [
          "signoutsession",
          "sign out session component",
          "theme"
        ],
        "alternatives": [
          "changestylevariable",
          "darkmodeprovider",
          "loadinganimate",
          "sessionproviders",
          "sessionexpireslogout"
        ]
      },
      {
        "component": "TimeTracker",
        "keywords": [
          "timetracker",
          "time tracking component",
          "status"
        ],
        "alternatives": [
          "sessionhandleprovider",
          "error500",
          "errorstate",
          "reacttimetracker",
          "deleteconfirmationmodal"
        ]
      },
      {
        "component": "SessionHandleProvider",
        "keywords": [
          "sessionhandleprovider",
          "session handling provider component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "error500",
          "errorstate",
          "reacttimetracker",
          "deleteconfirmationmodal"
        ]
      },
      {
        "component": "Error500",
        "keywords": [
          "error500",
          "500 error display component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "sessionhandleprovider",
          "errorstate",
          "reacttimetracker",
          "deleteconfirmationmodal"
        ]
      },
      {
        "component": "ErrorState",
        "keywords": [
          "errorstate",
          "error state display component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "reacttimetracker",
          "deleteconfirmationmodal"
        ]
      },
      {
        "component": "ReactTimeTracker",
        "keywords": [
          "reacttimetracker",
          "react time tracking component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate",
          "deleteconfirmationmodal"
        ]
      },
      {
        "component": "DeleteConfirmationModal",
        "keywords": [
          "deleteconfirmationmodal",
          "delete confirmation modal component",
          "status",
          "modal",
          "overlay",
          "user-interaction",
          "dialog"
        ],
        "alternatives": [
          "dialog",
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate"
        ]
      },
      {
        "component": "CopyToClipboard",
        "keywords": [
          "copytoclipboard",
          "copy to clipboard functionality component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate",
          "reacttimetracker"
        ]
      },
      {
        "component": "MultiPurposeModal",
        "keywords": [
          "multipurposemodal",
          "multi-purpose modal component",
          "status",
          "modal",
          "overlay",
          "user-interaction",
          "dialog"
        ],
        "alternatives": [
          "dialog",
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate"
        ]
      },
      {
        "component": "ModalExamples",
        "keywords": [
          "modalexamples",
          "modal examples component",
          "status",
          "modal",
          "overlay",
          "user-interaction",
          "dialog"
        ],
        "alternatives": [
          "dialog",
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate"
        ]
      },
      {
        "component": "NotFound",
        "keywords": [
          "notfound",
          "not found component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate",
          "reacttimetracker"
        ]
      },
      {
        "component": "Unauthorized",
        "keywords": [
          "unauthorized",
          "unauthorized component",
          "status"
        ],
        "alternatives": [
          "timetracker",
          "sessionhandleprovider",
          "error500",
          "errorstate",
          "reacttimetracker"
        ]
      },
      {
        "component": "Tabs",
        "keywords": [
          "tabs",
          "tab navigation component"
        ],
        "alternatives": [
          "verticaltabs",
          "tabcontent"
        ]
      },
      {
        "component": "VerticalTabs",
        "keywords": [
          "verticaltabs",
          "vertical tab navigation component",
          "tabs"
        ],
        "alternatives": [
          "tabs",
          "tabcontent"
        ]
      },
      {
        "component": "TabContent",
        "keywords": [
          "tabcontent",
          "tab content display component",
          "tabs"
        ],
        "alternatives": [
          "tabs",
          "verticaltabs"
        ]
      },
      {
        "component": "Cursor",
        "keywords": [
          "cursor",
          "custom cursor component with trailing effects and animations",
          "cursors"
        ],
        "alternatives": [
          "magneticbutton",
          "cursorcontext",
          "usecursorinteraction",
          "cursorcontroldemo"
        ]
      },
      {
        "component": "MagneticButton",
        "keywords": [
          "magneticbutton",
          "button component with magnetic cursor attraction effect",
          "cursors",
          "button",
          "action",
          "user-actions",
          "event-handling",
          "form-submission"
        ],
        "alternatives": [
          "submitbutton",
          "togglebutton",
          "radiobutton",
          "createbutton",
          "createbuttonexample"
        ]
      },
      {
        "component": "CursorContext",
        "keywords": [
          "cursorcontext",
          "context provider for cursor state management across the application",
          "cursors"
        ],
        "alternatives": [
          "cursor",
          "magneticbutton",
          "usecursorinteraction",
          "cursorcontroldemo"
        ]
      },
      {
        "component": "useCursorInteraction",
        "keywords": [
          "usecursorinteraction",
          "hook for adding interactive cursor effects to elements",
          "cursors"
        ],
        "alternatives": [
          "cursor",
          "magneticbutton",
          "cursorcontext",
          "cursorcontroldemo"
        ]
      },
      {
        "component": "CursorControlDemo",
        "keywords": [
          "cursorcontroldemo",
          "comprehensive demo component for the cursor system",
          "cursors"
        ],
        "alternatives": [
          "cursor",
          "magneticbutton",
          "cursorcontext",
          "usecursorinteraction"
        ]
      },
      {
        "component": "Paystack",
        "keywords": [
          "paystack",
          "paystack payment integration component",
          "library"
        ],
        "alternatives": []
      }
    ]
  }
}