"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-auth/lib/client.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/lib/client.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSessionError: () => (/* binding */ ClientSessionError),\n/* harmony export */   apiBaseUrl: () => (/* binding */ apiBaseUrl),\n/* harmony export */   fetchData: () => (/* binding */ fetchData),\n/* harmony export */   now: () => (/* binding */ now),\n/* harmony export */   parseUrl: () => (/* binding */ parseUrl),\n/* harmony export */   useOnline: () => (/* binding */ useOnline)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _auth_core_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth/core/errors */ \"(ssr)/./node_modules/@auth/core/errors.js\");\n/* __next_internal_client_entry_do_not_use__ ClientSessionError,fetchData,apiBaseUrl,useOnline,now,parseUrl auto */ function _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    _regeneratorRuntime = function _regeneratorRuntime() {\n        return e;\n    };\n    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {\n        t[e] = r.value;\n    }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\";\n    function define(t, e, r) {\n        return Object.defineProperty(t, e, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), t[e];\n    }\n    try {\n        define({}, \"\");\n    } catch (t) {\n        define = function define(t, e, r) {\n            return t[e] = r;\n        };\n    }\n    function wrap(t, e, r, n) {\n        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);\n        return o(a, \"_invoke\", {\n            value: makeInvokeMethod(t, r, c)\n        }), a;\n    }\n    function tryCatch(t, e, r) {\n        try {\n            return {\n                type: \"normal\",\n                arg: t.call(e, r)\n            };\n        } catch (t) {\n            return {\n                type: \"throw\",\n                arg: t\n            };\n        }\n    }\n    e.wrap = wrap;\n    var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var p = {};\n    define(p, a, function() {\n        return this;\n    });\n    var d = Object.getPrototypeOf, v = d && d(d(values([])));\n    v && v !== r && n.call(v, a) && (p = v);\n    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n    function defineIteratorMethods(t) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(e) {\n            define(t, e, function(t) {\n                return this._invoke(e, t);\n            });\n        });\n    }\n    function AsyncIterator(t, e) {\n        function invoke(r, o, i, a) {\n            var c = tryCatch(t[r], t, o);\n            if (\"throw\" !== c.type) {\n                var u = c.arg, h = u.value;\n                return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function(t) {\n                    invoke(\"next\", t, i, a);\n                }, function(t) {\n                    invoke(\"throw\", t, i, a);\n                }) : e.resolve(h).then(function(t) {\n                    u.value = t, i(u);\n                }, function(t) {\n                    return invoke(\"throw\", t, i, a);\n                });\n            }\n            a(c.arg);\n        }\n        var r;\n        o(this, \"_invoke\", {\n            value: function value(t, n) {\n                function callInvokeWithMethodAndArg() {\n                    return new e(function(e, r) {\n                        invoke(t, n, e, r);\n                    });\n                }\n                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(e, r, n) {\n        var o = h;\n        return function(i, a) {\n            if (o === f) throw new Error(\"Generator is already running\");\n            if (o === s) {\n                if (\"throw\" === i) throw a;\n                return {\n                    value: t,\n                    done: !0\n                };\n            }\n            for(n.method = i, n.arg = a;;){\n                var c = n.delegate;\n                if (c) {\n                    var u = maybeInvokeDelegate(c, n);\n                    if (u) {\n                        if (u === y) continue;\n                        return u;\n                    }\n                }\n                if (\"next\" === n.method) n.sent = n._sent = n.arg;\n                else if (\"throw\" === n.method) {\n                    if (o === h) throw o = s, n.arg;\n                    n.dispatchException(n.arg);\n                } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n                o = f;\n                var p = tryCatch(e, r, n);\n                if (\"normal\" === p.type) {\n                    if (o = n.done ? s : l, p.arg === y) continue;\n                    return {\n                        value: p.arg,\n                        done: n.done\n                    };\n                }\n                \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(e, r) {\n        var n = r.method, o = e.iterator[n];\n        if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n        var i = tryCatch(o, e.iterator, r.arg);\n        if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n        var a = i.arg;\n        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n    }\n    function pushTryEntry(t) {\n        var e = {\n            tryLoc: t[0]\n        };\n        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n    }\n    function resetTryEntry(t) {\n        var e = t.completion || {};\n        e.type = \"normal\", delete e.arg, t.completion = e;\n    }\n    function Context(t) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], t.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(e) {\n        if (e || \"\" === e) {\n            var r = e[a];\n            if (r) return r.call(e);\n            if (\"function\" == typeof e.next) return e;\n            if (!isNaN(e.length)) {\n                var o = -1, i = function next() {\n                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n                    return next.value = t, next.done = !0, next;\n                };\n                return i.next = i;\n            }\n        }\n        throw new TypeError(_typeof(e) + \" is not iterable\");\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), o(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function(t) {\n        var e = \"function\" == typeof t && t.constructor;\n        return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n    }, e.mark = function(t) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n    }, e.awrap = function(t) {\n        return {\n            __await: t\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {\n        return this;\n    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {\n        void 0 === i && (i = Promise);\n        var a = new AsyncIterator(wrap(t, r, n, o), i);\n        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {\n            return t.done ? t.value : a.next();\n        });\n    }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function() {\n        return this;\n    }), define(g, \"toString\", function() {\n        return \"[object Generator]\";\n    }), e.keys = function(t) {\n        var e = Object(t), r = [];\n        for(var n in e)r.push(n);\n        return r.reverse(), function next() {\n            for(; r.length;){\n                var t = r.pop();\n                if (t in e) return next.value = t, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, e.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(e) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)\"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var t = this.tryEntries[0].completion;\n            if (\"throw\" === t.type) throw t.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(e) {\n            if (this.done) throw e;\n            var r = this;\n            function handle(n, o) {\n                return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n            }\n            for(var o = this.tryEntries.length - 1; o >= 0; --o){\n                var i = this.tryEntries[o], a = i.completion;\n                if (\"root\" === i.tryLoc) return handle(\"end\");\n                if (i.tryLoc <= this.prev) {\n                    var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\");\n                    if (c && u) {\n                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n                    } else if (c) {\n                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                    } else {\n                        if (!u) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(t, e) {\n            for(var r = this.tryEntries.length - 1; r >= 0; --r){\n                var o = this.tryEntries[r];\n                if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n                    var i = o;\n                    break;\n                }\n            }\n            i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n            var a = i ? i.completion : {};\n            return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n        },\n        complete: function complete(t, e) {\n            if (\"throw\" === t.type) throw t.arg;\n            return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n        },\n        finish: function finish(t) {\n            for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                var r = this.tryEntries[e];\n                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n            }\n        },\n        \"catch\": function _catch(t) {\n            for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                var r = this.tryEntries[e];\n                if (r.tryLoc === t) {\n                    var n = r.completion;\n                    if (\"throw\" === n.type) {\n                        var o = n.arg;\n                        resetTryEntry(r);\n                    }\n                    return o;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(e, r, n) {\n            return this.delegate = {\n                iterator: values(e),\n                resultName: r,\n                nextLoc: n\n            }, \"next\" === this.method && (this.arg = t), y;\n        }\n    }, e;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _callSuper(_this, derived, args) {\n    function isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n            return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        } catch (e) {\n            return false;\n        }\n    }\n    derived = _getPrototypeOf(derived);\n    return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n\n\n/** @todo */ var ClientFetchError = /*#__PURE__*/ function(_AuthError) {\n    function ClientFetchError() {\n        _classCallCheck(this, ClientFetchError);\n        return _callSuper(this, ClientFetchError, arguments);\n    }\n    _inherits(ClientFetchError, _AuthError);\n    return _createClass(ClientFetchError);\n}(_auth_core_errors__WEBPACK_IMPORTED_MODULE_1__.AuthError);\n/** @todo */ var ClientSessionError = /*#__PURE__*/ function(_AuthError2) {\n    function ClientSessionError() {\n        _classCallCheck(this, ClientSessionError);\n        return _callSuper(this, ClientSessionError, arguments);\n    }\n    _inherits(ClientSessionError, _AuthError2);\n    return _createClass(ClientSessionError);\n}(_auth_core_errors__WEBPACK_IMPORTED_MODULE_1__.AuthError);\n// ------------------------ Internal ------------------------\n/**\n * If passed 'appContext' via getInitialProps() in _app.js\n * then get the req object from ctx and use that for the\n * req value to allow `fetchData` to\n * work seemlessly in getInitialProps() on server side\n * pages *and* in _app.js.\n * @internal\n */ function fetchData(_x, _x2, _x3) {\n    return _fetchData.apply(this, arguments);\n}\n/** @internal */ function _fetchData() {\n    _fetchData = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee(path, __NEXTAUTH, logger) {\n        var req, url, _req$headers, options, res, data, _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    req = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n                    url = \"\".concat(apiBaseUrl(__NEXTAUTH), \"/\").concat(path);\n                    _context.prev = 2;\n                    options = {\n                        headers: _objectSpread({\n                            \"Content-Type\": \"application/json\"\n                        }, req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie ? {\n                            cookie: req.headers.cookie\n                        } : {})\n                    };\n                    if (req !== null && req !== void 0 && req.body) {\n                        options.body = JSON.stringify(req.body);\n                        options.method = \"POST\";\n                    }\n                    _context.next = 7;\n                    return fetch(url, options);\n                case 7:\n                    res = _context.sent;\n                    _context.next = 10;\n                    return res.json();\n                case 10:\n                    data = _context.sent;\n                    if (res.ok) {\n                        _context.next = 13;\n                        break;\n                    }\n                    throw data;\n                case 13:\n                    return _context.abrupt(\"return\", data);\n                case 16:\n                    _context.prev = 16;\n                    _context.t0 = _context[\"catch\"](2);\n                    logger.error(new ClientFetchError(_context.t0.message, _context.t0));\n                    return _context.abrupt(\"return\", null);\n                case 20:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee, null, [\n            [\n                2,\n                16\n            ]\n        ]);\n    }));\n    return _fetchData.apply(this, arguments);\n}\nfunction apiBaseUrl(__NEXTAUTH) {\n    if (true) {\n        // Return absolute path when called server side\n        return \"\".concat(__NEXTAUTH.baseUrlServer).concat(__NEXTAUTH.basePathServer);\n    }\n    // Return relative path when called client side\n    return __NEXTAUTH.basePath;\n}\n/** @internal  */ function useOnline() {\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false), _React$useState2 = _slicedToArray(_React$useState, 2), isOnline = _React$useState2[0], setIsOnline = _React$useState2[1];\n    var setOnline = function setOnline() {\n        return setIsOnline(true);\n    };\n    var setOffline = function setOffline() {\n        return setIsOnline(false);\n    };\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useOnline.useEffect\": function() {\n            window.addEventListener(\"online\", setOnline);\n            window.addEventListener(\"offline\", setOffline);\n            return ({\n                \"useOnline.useEffect\": function() {\n                    window.removeEventListener(\"online\", setOnline);\n                    window.removeEventListener(\"offline\", setOffline);\n                }\n            })[\"useOnline.useEffect\"];\n        }\n    }[\"useOnline.useEffect\"], []);\n    return isOnline;\n}\n/**\n * Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n * @internal\n */ function now() {\n    return Math.floor(Date.now() / 1000);\n}\n/**\n * Returns an `URL` like object to make requests/redirects from server-side\n * @internal\n */ function parseUrl(url) {\n    var defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = \"https://\".concat(url);\n    }\n    var _url = new URL(url || defaultUrl);\n    var path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n    var base = \"\".concat(_url.origin).concat(path);\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path: path,\n        base: base,\n        toString: function toString() {\n            return base;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/lib/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/react.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionContext: () => (/* binding */ SessionContext),\n/* harmony export */   SessionProvider: () => (/* binding */ SessionProvider),\n/* harmony export */   __NEXTAUTH: () => (/* binding */ __NEXTAUTH),\n/* harmony export */   getCsrfToken: () => (/* binding */ getCsrfToken),\n/* harmony export */   getProviders: () => (/* binding */ getProviders),\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   useSession: () => (/* binding */ useSession)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _lib_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/client.js */ \"(ssr)/./node_modules/next-auth/lib/client.js\");\n/**\n *\n * NextAuth.js is the official integration of Auth.js for Next.js applications. It supports both\n * [Client Components](https://nextjs.org/docs/app/building-your-application/rendering/client-components) and the\n * [Pages Router](https://nextjs.org/docs/pages). It includes methods for signing in, signing out, hooks, and a React\n * Context provider to wrap your application and make session data available anywhere.\n *\n * For use in [Server Actions](https://nextjs.org/docs/app/api-reference/functions/server-actions), check out [these methods](https://authjs.dev/guides/upgrade-to-v5#methods)\n *\n * @module react\n */ /* __next_internal_client_entry_do_not_use__ __NEXTAUTH,SessionContext,useSession,getSession,getCsrfToken,getProviders,signIn,signOut,SessionProvider auto */ function _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar _process$env$NEXTAUTH, _ref, _process$env$NEXTAUTH2, _process$env$NEXTAUTH3, _React$createContext;\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    _regeneratorRuntime = function _regeneratorRuntime() {\n        return e;\n    };\n    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {\n        t[e] = r.value;\n    }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\";\n    function define(t, e, r) {\n        return Object.defineProperty(t, e, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), t[e];\n    }\n    try {\n        define({}, \"\");\n    } catch (t) {\n        define = function define(t, e, r) {\n            return t[e] = r;\n        };\n    }\n    function wrap(t, e, r, n) {\n        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);\n        return o(a, \"_invoke\", {\n            value: makeInvokeMethod(t, r, c)\n        }), a;\n    }\n    function tryCatch(t, e, r) {\n        try {\n            return {\n                type: \"normal\",\n                arg: t.call(e, r)\n            };\n        } catch (t) {\n            return {\n                type: \"throw\",\n                arg: t\n            };\n        }\n    }\n    e.wrap = wrap;\n    var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var p = {};\n    define(p, a, function() {\n        return this;\n    });\n    var d = Object.getPrototypeOf, v = d && d(d(values([])));\n    v && v !== r && n.call(v, a) && (p = v);\n    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n    function defineIteratorMethods(t) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(e) {\n            define(t, e, function(t) {\n                return this._invoke(e, t);\n            });\n        });\n    }\n    function AsyncIterator(t, e) {\n        function invoke(r, o, i, a) {\n            var c = tryCatch(t[r], t, o);\n            if (\"throw\" !== c.type) {\n                var u = c.arg, h = u.value;\n                return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function(t) {\n                    invoke(\"next\", t, i, a);\n                }, function(t) {\n                    invoke(\"throw\", t, i, a);\n                }) : e.resolve(h).then(function(t) {\n                    u.value = t, i(u);\n                }, function(t) {\n                    return invoke(\"throw\", t, i, a);\n                });\n            }\n            a(c.arg);\n        }\n        var r;\n        o(this, \"_invoke\", {\n            value: function value(t, n) {\n                function callInvokeWithMethodAndArg() {\n                    return new e(function(e, r) {\n                        invoke(t, n, e, r);\n                    });\n                }\n                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(e, r, n) {\n        var o = h;\n        return function(i, a) {\n            if (o === f) throw new Error(\"Generator is already running\");\n            if (o === s) {\n                if (\"throw\" === i) throw a;\n                return {\n                    value: t,\n                    done: !0\n                };\n            }\n            for(n.method = i, n.arg = a;;){\n                var c = n.delegate;\n                if (c) {\n                    var u = maybeInvokeDelegate(c, n);\n                    if (u) {\n                        if (u === y) continue;\n                        return u;\n                    }\n                }\n                if (\"next\" === n.method) n.sent = n._sent = n.arg;\n                else if (\"throw\" === n.method) {\n                    if (o === h) throw o = s, n.arg;\n                    n.dispatchException(n.arg);\n                } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n                o = f;\n                var p = tryCatch(e, r, n);\n                if (\"normal\" === p.type) {\n                    if (o = n.done ? s : l, p.arg === y) continue;\n                    return {\n                        value: p.arg,\n                        done: n.done\n                    };\n                }\n                \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(e, r) {\n        var n = r.method, o = e.iterator[n];\n        if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n        var i = tryCatch(o, e.iterator, r.arg);\n        if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n        var a = i.arg;\n        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n    }\n    function pushTryEntry(t) {\n        var e = {\n            tryLoc: t[0]\n        };\n        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n    }\n    function resetTryEntry(t) {\n        var e = t.completion || {};\n        e.type = \"normal\", delete e.arg, t.completion = e;\n    }\n    function Context(t) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], t.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(e) {\n        if (e || \"\" === e) {\n            var r = e[a];\n            if (r) return r.call(e);\n            if (\"function\" == typeof e.next) return e;\n            if (!isNaN(e.length)) {\n                var o = -1, i = function next() {\n                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n                    return next.value = t, next.done = !0, next;\n                };\n                return i.next = i;\n            }\n        }\n        throw new TypeError(_typeof(e) + \" is not iterable\");\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), o(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function(t) {\n        var e = \"function\" == typeof t && t.constructor;\n        return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n    }, e.mark = function(t) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n    }, e.awrap = function(t) {\n        return {\n            __await: t\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {\n        return this;\n    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {\n        void 0 === i && (i = Promise);\n        var a = new AsyncIterator(wrap(t, r, n, o), i);\n        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {\n            return t.done ? t.value : a.next();\n        });\n    }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function() {\n        return this;\n    }), define(g, \"toString\", function() {\n        return \"[object Generator]\";\n    }), e.keys = function(t) {\n        var e = Object(t), r = [];\n        for(var n in e)r.push(n);\n        return r.reverse(), function next() {\n            for(; r.length;){\n                var t = r.pop();\n                if (t in e) return next.value = t, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, e.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(e) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)\"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var t = this.tryEntries[0].completion;\n            if (\"throw\" === t.type) throw t.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(e) {\n            if (this.done) throw e;\n            var r = this;\n            function handle(n, o) {\n                return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n            }\n            for(var o = this.tryEntries.length - 1; o >= 0; --o){\n                var i = this.tryEntries[o], a = i.completion;\n                if (\"root\" === i.tryLoc) return handle(\"end\");\n                if (i.tryLoc <= this.prev) {\n                    var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\");\n                    if (c && u) {\n                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n                    } else if (c) {\n                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                    } else {\n                        if (!u) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(t, e) {\n            for(var r = this.tryEntries.length - 1; r >= 0; --r){\n                var o = this.tryEntries[r];\n                if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n                    var i = o;\n                    break;\n                }\n            }\n            i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n            var a = i ? i.completion : {};\n            return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n        },\n        complete: function complete(t, e) {\n            if (\"throw\" === t.type) throw t.arg;\n            return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n        },\n        finish: function finish(t) {\n            for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                var r = this.tryEntries[e];\n                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n            }\n        },\n        \"catch\": function _catch(t) {\n            for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                var r = this.tryEntries[e];\n                if (r.tryLoc === t) {\n                    var n = r.completion;\n                    if (\"throw\" === n.type) {\n                        var o = n.arg;\n                        resetTryEntry(r);\n                    }\n                    return o;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(e, r, n) {\n            return this.delegate = {\n                iterator: values(e),\n                resultName: r,\n                nextLoc: n\n            }, \"next\" === this.method && (this.arg = t), y;\n        }\n    }, e;\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n\n\n\n// This behaviour mirrors the default behaviour for getting the site name that\n// happens server side in server/index.js\n// 1. An empty value is legitimate when the code is being invoked client side as\n//    relative URLs are valid in that context and so defaults to empty.\n// 2. When invoked server side the value is picked up from an environment\n//    variable and defaults to 'http://localhost:3000'.\nvar __NEXTAUTH = {\n    baseUrl: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)((_process$env$NEXTAUTH = process.env.NEXTAUTH_URL) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : process.env.VERCEL_URL).origin,\n    basePath: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)((_ref = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH2 !== void 0 ? _process$env$NEXTAUTH2 : process.env.NEXTAUTH_URL) !== null && _ref !== void 0 ? _ref : process.env.VERCEL_URL).origin,\n    basePathServer: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)((_process$env$NEXTAUTH3 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH3 !== void 0 ? _process$env$NEXTAUTH3 : process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: function _getSession() {}\n};\nvar broadcastChannel = null;\nfunction getNewBroadcastChannel() {\n    return new BroadcastChannel(\"next-auth\");\n}\nfunction broadcast() {\n    if (typeof BroadcastChannel === \"undefined\") {\n        return {\n            postMessage: function postMessage() {},\n            addEventListener: function addEventListener() {},\n            removeEventListener: function removeEventListener() {}\n        };\n    }\n    if (broadcastChannel === null) {\n        broadcastChannel = getNewBroadcastChannel();\n    }\n    return broadcastChannel;\n}\n// TODO:\nvar logger = {\n    debug: console.debug,\n    error: console.error,\n    warn: console.warn\n};\nvar SessionContext = (_React$createContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext) === null || _React$createContext === void 0 ? void 0 : _React$createContext.call(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2))), undefined);\n/**\n * React Hook that gives you access to the logged in user's session data and lets you modify it.\n *\n * :::info\n * `useSession` is for client-side use only and when using [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router) you should prefer the `auth()` export.\n * :::\n */ function useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    // @ts-expect-error Satisfy TS if branch on line below\n    var value = react__WEBPACK_IMPORTED_MODULE_1__.useContext(SessionContext);\n    if (!value && true) {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    var _ref2 = options !== null && options !== void 0 ? options : {}, required = _ref2.required, onUnauthenticated = _ref2.onUnauthenticated;\n    var requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect({\n        \"useSession.useEffect\": function() {\n            if (requiredAndNotLoading) {\n                var url = \"\".concat(__NEXTAUTH.basePath, \"/signin?\").concat(new URLSearchParams({\n                    error: \"SessionRequired\",\n                    callbackUrl: window.location.href\n                }));\n                if (onUnauthenticated) onUnauthenticated();\n                else window.location.href = url;\n            }\n        }\n    }[\"useSession.useEffect\"], [\n        requiredAndNotLoading,\n        onUnauthenticated\n    ]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\"\n        };\n    }\n    return value;\n}\nfunction getSession(_x) {\n    return _getSession2.apply(this, arguments);\n}\n/**\n * Returns the current Cross-Site Request Forgery Token (CSRF Token)\n * required to make requests that changes state. (e.g. signing in or out, or updating the session).\n *\n * [CSRF Prevention: Double Submit Cookie](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie)\n */ function _getSession2() {\n    _getSession2 = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee3(params) {\n        var _params$broadcast;\n        var session, _broadcastChannel;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while(1)switch(_context3.prev = _context3.next){\n                case 0:\n                    _context3.next = 2;\n                    return (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"session\", __NEXTAUTH, logger, params);\n                case 2:\n                    session = _context3.sent;\n                    if ((_params$broadcast = params === null || params === void 0 ? void 0 : params.broadcast) !== null && _params$broadcast !== void 0 ? _params$broadcast : true) {\n                        _broadcastChannel = getNewBroadcastChannel();\n                        _broadcastChannel.postMessage({\n                            event: \"session\",\n                            data: {\n                                trigger: \"getSession\"\n                            }\n                        });\n                    }\n                    return _context3.abrupt(\"return\", session);\n                case 5:\n                case \"end\":\n                    return _context3.stop();\n            }\n        }, _callee3);\n    }));\n    return _getSession2.apply(this, arguments);\n}\nfunction getCsrfToken() {\n    return _getCsrfToken.apply(this, arguments);\n}\n/**\n * Returns a client-safe configuration object of the currently\n * available providers.\n */ function _getCsrfToken() {\n    _getCsrfToken = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee4() {\n        var _response$csrfToken;\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while(1)switch(_context4.prev = _context4.next){\n                case 0:\n                    _context4.next = 2;\n                    return (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"csrf\", __NEXTAUTH, logger);\n                case 2:\n                    response = _context4.sent;\n                    return _context4.abrupt(\"return\", (_response$csrfToken = response === null || response === void 0 ? void 0 : response.csrfToken) !== null && _response$csrfToken !== void 0 ? _response$csrfToken : \"\");\n                case 4:\n                case \"end\":\n                    return _context4.stop();\n            }\n        }, _callee4);\n    }));\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction getProviders() {\n    return _getProviders.apply(this, arguments);\n}\n/**\n * Initiate a signin flow or send the user to the signin page listing all possible providers.\n * Handles CSRF protection.\n */ function _getProviders() {\n    _getProviders = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while(1)switch(_context5.prev = _context5.next){\n                case 0:\n                    return _context5.abrupt(\"return\", (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"providers\", __NEXTAUTH, logger));\n                case 1:\n                case \"end\":\n                    return _context5.stop();\n            }\n        }, _callee5);\n    }));\n    return _getProviders.apply(this, arguments);\n}\nfunction signIn(_x2, _x3, _x4) {\n    return _signIn.apply(this, arguments);\n}\n/**\n * Initiate a signout, by destroying the current session.\n * Handles CSRF protection.\n */ function _signIn() {\n    _signIn = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee6(provider, options, authorizationParams) {\n        var _ref6, _options$redirectTo;\n        var _ref5, _ref5$redirect, redirect, redirectTo, baseUrl, providers, isCredentials, isEmail, isSupportingReturn, signInUrl, csrfToken, res, data, _data$url, url, error, code;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while(1)switch(_context6.prev = _context6.next){\n                case 0:\n                    _ref5 = options !== null && options !== void 0 ? options : {}, _ref5$redirect = _ref5.redirect, redirect = _ref5$redirect === void 0 ? true : _ref5$redirect;\n                    redirectTo = (_ref6 = (_options$redirectTo = options === null || options === void 0 ? void 0 : options.redirectTo) !== null && _options$redirectTo !== void 0 ? _options$redirectTo : options === null || options === void 0 ? void 0 : options.callbackUrl) !== null && _ref6 !== void 0 ? _ref6 : window.location.href;\n                    baseUrl = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.apiBaseUrl)(__NEXTAUTH);\n                    _context6.next = 5;\n                    return getProviders();\n                case 5:\n                    providers = _context6.sent;\n                    if (providers) {\n                        _context6.next = 9;\n                        break;\n                    }\n                    window.location.href = \"\".concat(baseUrl, \"/error\");\n                    return _context6.abrupt(\"return\");\n                case 9:\n                    if (!(!provider || !(provider in providers))) {\n                        _context6.next = 12;\n                        break;\n                    }\n                    window.location.href = \"\".concat(baseUrl, \"/signin?\").concat(new URLSearchParams({\n                        callbackUrl: redirectTo\n                    }));\n                    return _context6.abrupt(\"return\");\n                case 12:\n                    isCredentials = providers[provider].type === \"credentials\";\n                    isEmail = providers[provider].type === \"email\";\n                    isSupportingReturn = isCredentials || isEmail;\n                    signInUrl = \"\".concat(baseUrl, \"/\").concat(isCredentials ? \"callback\" : \"signin\", \"/\").concat(provider);\n                    _context6.next = 18;\n                    return getCsrfToken();\n                case 18:\n                    csrfToken = _context6.sent;\n                    _context6.next = 21;\n                    return fetch(\"\".concat(signInUrl, \"?\").concat(new URLSearchParams(authorizationParams)), {\n                        method: \"post\",\n                        headers: {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\",\n                            \"X-Auth-Return-Redirect\": \"1\"\n                        },\n                        // @ts-expect-error\n                        body: new URLSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                            csrfToken: csrfToken,\n                            callbackUrl: redirectTo\n                        }))\n                    });\n                case 21:\n                    res = _context6.sent;\n                    _context6.next = 24;\n                    return res.json();\n                case 24:\n                    data = _context6.sent;\n                    if (!(redirect || !isSupportingReturn)) {\n                        _context6.next = 30;\n                        break;\n                    }\n                    url = (_data$url = data.url) !== null && _data$url !== void 0 ? _data$url : redirectTo;\n                    window.location.href = url;\n                    // If url contains a hash, the browser does not reload the page. We reload manually\n                    if (url.includes(\"#\")) window.location.reload();\n                    return _context6.abrupt(\"return\");\n                case 30:\n                    error = new URL(data.url).searchParams.get(\"error\");\n                    code = new URL(data.url).searchParams.get(\"code\");\n                    if (!res.ok) {\n                        _context6.next = 35;\n                        break;\n                    }\n                    _context6.next = 35;\n                    return __NEXTAUTH._getSession({\n                        event: \"storage\"\n                    });\n                case 35:\n                    return _context6.abrupt(\"return\", {\n                        error: error,\n                        code: code,\n                        status: res.status,\n                        ok: res.ok,\n                        url: error ? null : data.url\n                    });\n                case 36:\n                case \"end\":\n                    return _context6.stop();\n            }\n        }, _callee6);\n    }));\n    return _signIn.apply(this, arguments);\n}\nfunction signOut(_x5) {\n    return _signOut.apply(this, arguments);\n}\n/**\n * [React Context](https://react.dev/learn/passing-data-deeply-with-context) provider to wrap the app (`pages/`) to make session data available anywhere.\n *\n * When used, the session state is automatically synchronized across all open tabs/windows and they are all updated whenever they gain or lose focus\n * or the state changes (e.g. a user signs in or out) when {@link SessionProviderProps.refetchOnWindowFocus} is `true`.\n *\n * :::info\n * `SessionProvider` is for client-side use only and when using [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router) you should prefer the `auth()` export.\n * :::\n */ function _signOut() {\n    _signOut = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee7(options) {\n        var _ref7, _options$redirectTo2, _options$redirect;\n        var redirectTo, baseUrl, csrfToken, res, data, _data$url2, url;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while(1)switch(_context7.prev = _context7.next){\n                case 0:\n                    redirectTo = (_ref7 = (_options$redirectTo2 = options === null || options === void 0 ? void 0 : options.redirectTo) !== null && _options$redirectTo2 !== void 0 ? _options$redirectTo2 : options === null || options === void 0 ? void 0 : options.callbackUrl) !== null && _ref7 !== void 0 ? _ref7 : window.location.href;\n                    baseUrl = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.apiBaseUrl)(__NEXTAUTH);\n                    _context7.next = 4;\n                    return getCsrfToken();\n                case 4:\n                    csrfToken = _context7.sent;\n                    _context7.next = 7;\n                    return fetch(\"\".concat(baseUrl, \"/signout\"), {\n                        method: \"post\",\n                        headers: {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\",\n                            \"X-Auth-Return-Redirect\": \"1\"\n                        },\n                        body: new URLSearchParams({\n                            csrfToken: csrfToken,\n                            callbackUrl: redirectTo\n                        })\n                    });\n                case 7:\n                    res = _context7.sent;\n                    _context7.next = 10;\n                    return res.json();\n                case 10:\n                    data = _context7.sent;\n                    broadcast().postMessage({\n                        event: \"session\",\n                        data: {\n                            trigger: \"signout\"\n                        }\n                    });\n                    if (!((_options$redirect = options === null || options === void 0 ? void 0 : options.redirect) !== null && _options$redirect !== void 0 ? _options$redirect : true)) {\n                        _context7.next = 17;\n                        break;\n                    }\n                    url = (_data$url2 = data.url) !== null && _data$url2 !== void 0 ? _data$url2 : redirectTo;\n                    window.location.href = url;\n                    // If url contains a hash, the browser does not reload the page. We reload manually\n                    if (url.includes(\"#\")) window.location.reload();\n                    // @ts-expect-error\n                    return _context7.abrupt(\"return\");\n                case 17:\n                    _context7.next = 19;\n                    return __NEXTAUTH._getSession({\n                        event: \"storage\"\n                    });\n                case 19:\n                    return _context7.abrupt(\"return\", data);\n                case 20:\n                case \"end\":\n                    return _context7.stop();\n            }\n        }, _callee7);\n    }));\n    return _signOut.apply(this, arguments);\n}\nfunction SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var children = props.children, basePath = props.basePath, refetchInterval = props.refetchInterval, refetchWhenOffline = props.refetchWhenOffline;\n    if (basePath) __NEXTAUTH.basePath = basePath;\n    /**\n   * If session was `null`, there was an attempt to fetch it,\n   * but it failed, but we still treat it as a valid initial value.\n   */ var hasInitialSession = props.session !== undefined;\n    /** If session was passed, initialize as already synced */ __NEXTAUTH._lastSync = hasInitialSession ? (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)() : 0;\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n        \"SessionProvider.useState[_React$useState]\": function() {\n            if (hasInitialSession) __NEXTAUTH._session = props.session;\n            return props.session;\n        }\n    }[\"SessionProvider.useState[_React$useState]\"]), _React$useState2 = _slicedToArray(_React$useState, 2), session = _React$useState2[0], setSession = _React$useState2[1];\n    /** If session was passed, initialize as not loading */ var _React$useState3 = react__WEBPACK_IMPORTED_MODULE_1__.useState(!hasInitialSession), _React$useState4 = _slicedToArray(_React$useState3, 2), loading = _React$useState4[0], setLoading = _React$useState4[1];\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect({\n        \"SessionProvider.useEffect\": function() {\n            __NEXTAUTH._getSession = /*#__PURE__*/ _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee() {\n                var _ref4, event, storageEvent, _args = arguments;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while(1)switch(_context.prev = _context.next){\n                        case 0:\n                            _ref4 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, event = _ref4.event;\n                            _context.prev = 1;\n                            storageEvent = event === \"storage\"; // We should always update if we don't have a client session yet\n                            // or if there are events from other tabs/windows\n                            if (!(storageEvent || __NEXTAUTH._session === undefined)) {\n                                _context.next = 10;\n                                break;\n                            }\n                            __NEXTAUTH._lastSync = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)();\n                            _context.next = 7;\n                            return getSession({\n                                broadcast: !storageEvent\n                            });\n                        case 7:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            return _context.abrupt(\"return\");\n                        case 10:\n                            if (!// If there is no time defined for when a session should be considered\n                            // stale, then it's okay to use the value we have until an event is\n                            // triggered which updates it\n                            (!event || // If the client doesn't have a session then we don't need to call\n                            // the server to check if it does (if they have signed in via another\n                            // tab or window that will come through as a \"stroage\" event\n                            // event anyway)\n                            __NEXTAUTH._session === null || // Bail out early if the client session is not stale yet\n                            (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)() < __NEXTAUTH._lastSync)) {\n                                _context.next = 12;\n                                break;\n                            }\n                            return _context.abrupt(\"return\");\n                        case 12:\n                            // An event or session staleness occurred, update the client session.\n                            __NEXTAUTH._lastSync = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)();\n                            _context.next = 15;\n                            return getSession();\n                        case 15:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            _context.next = 22;\n                            break;\n                        case 19:\n                            _context.prev = 19;\n                            _context.t0 = _context[\"catch\"](1);\n                            logger.error(new _lib_client_js__WEBPACK_IMPORTED_MODULE_2__.ClientSessionError(_context.t0.message, _context.t0));\n                        case 22:\n                            _context.prev = 22;\n                            setLoading(false);\n                            return _context.finish(22);\n                        case 25:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }, _callee, null, [\n                    [\n                        1,\n                        19,\n                        22,\n                        25\n                    ]\n                ]);\n            }));\n            __NEXTAUTH._getSession();\n            return ({\n                \"SessionProvider.useEffect\": function() {\n                    __NEXTAUTH._lastSync = 0;\n                    __NEXTAUTH._session = undefined;\n                    __NEXTAUTH._getSession = ({\n                        \"SessionProvider.useEffect\": function() {}\n                    })[\"SessionProvider.useEffect\"];\n                }\n            })[\"SessionProvider.useEffect\"];\n        }\n    }[\"SessionProvider.useEffect\"], []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect({\n        \"SessionProvider.useEffect\": function() {\n            var handle = function handle() {\n                return __NEXTAUTH._getSession({\n                    event: \"storage\"\n                });\n            };\n            // Listen for storage events and update session if event fired from\n            // another window (but suppress firing another event to avoid a loop)\n            // Fetch new session data but tell it to not to fire another event to\n            // avoid an infinite loop.\n            // Note: We could pass session data through and do something like\n            // `setData(message.data)` but that can cause problems depending\n            // on how the session object is being used in the client; it is\n            // more robust to have each window/tab fetch it's own copy of the\n            // session object rather than share it across instances.\n            broadcast().addEventListener(\"message\", handle);\n            return ({\n                \"SessionProvider.useEffect\": function() {\n                    return broadcast().removeEventListener(\"message\", handle);\n                }\n            })[\"SessionProvider.useEffect\"];\n        }\n    }[\"SessionProvider.useEffect\"], []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect({\n        \"SessionProvider.useEffect\": function() {\n            var _props$refetchOnWindo = props.refetchOnWindowFocus, refetchOnWindowFocus = _props$refetchOnWindo === void 0 ? true : _props$refetchOnWindo;\n            // Listen for when the page is visible, if the user switches tabs\n            // and makes our tab visible again, re-fetch the session, but only if\n            // this feature is not disabled.\n            var visibilityHandler = function visibilityHandler() {\n                if (refetchOnWindowFocus && document.visibilityState === \"visible\") __NEXTAUTH._getSession({\n                    event: \"visibilitychange\"\n                });\n            };\n            document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n            return ({\n                \"SessionProvider.useEffect\": function() {\n                    return document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n                }\n            })[\"SessionProvider.useEffect\"];\n        }\n    }[\"SessionProvider.useEffect\"], [\n        props.refetchOnWindowFocus\n    ]);\n    var isOnline = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.useOnline)();\n    // TODO: Flip this behavior in next major version\n    var shouldRefetch = refetchWhenOffline !== false || isOnline;\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect({\n        \"SessionProvider.useEffect\": function() {\n            if (refetchInterval && shouldRefetch) {\n                var refetchIntervalTimer = setInterval({\n                    \"SessionProvider.useEffect.refetchIntervalTimer\": function() {\n                        if (__NEXTAUTH._session) {\n                            __NEXTAUTH._getSession({\n                                event: \"poll\"\n                            });\n                        }\n                    }\n                }[\"SessionProvider.useEffect.refetchIntervalTimer\"], refetchInterval * 1000);\n                return ({\n                    \"SessionProvider.useEffect\": function() {\n                        return clearInterval(refetchIntervalTimer);\n                    }\n                })[\"SessionProvider.useEffect\"];\n            }\n        }\n    }[\"SessionProvider.useEffect\"], [\n        refetchInterval,\n        shouldRefetch\n    ]);\n    var value = react__WEBPACK_IMPORTED_MODULE_1__.useMemo({\n        \"SessionProvider.useMemo[value]\": function() {\n            return {\n                data: session,\n                status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n                update: function update(data) {\n                    return _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee2() {\n                        var newSession;\n                        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                            while(1)switch(_context2.prev = _context2.next){\n                                case 0:\n                                    if (!loading) {\n                                        _context2.next = 2;\n                                        break;\n                                    }\n                                    return _context2.abrupt(\"return\");\n                                case 2:\n                                    setLoading(true);\n                                    _context2.t0 = _lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData;\n                                    _context2.t1 = __NEXTAUTH;\n                                    _context2.t2 = logger;\n                                    if (!(typeof data === \"undefined\")) {\n                                        _context2.next = 10;\n                                        break;\n                                    }\n                                    _context2.t3 = undefined;\n                                    _context2.next = 16;\n                                    break;\n                                case 10:\n                                    _context2.next = 12;\n                                    return getCsrfToken();\n                                case 12:\n                                    _context2.t4 = _context2.sent;\n                                    _context2.t5 = data;\n                                    _context2.t6 = {\n                                        csrfToken: _context2.t4,\n                                        data: _context2.t5\n                                    };\n                                    _context2.t3 = {\n                                        body: _context2.t6\n                                    };\n                                case 16:\n                                    _context2.t7 = _context2.t3;\n                                    _context2.next = 19;\n                                    return (0, _context2.t0)(\"session\", _context2.t1, _context2.t2, _context2.t7);\n                                case 19:\n                                    newSession = _context2.sent;\n                                    setLoading(false);\n                                    if (newSession) {\n                                        setSession(newSession);\n                                        broadcast().postMessage({\n                                            event: \"session\",\n                                            data: {\n                                                trigger: \"getSession\"\n                                            }\n                                        });\n                                    }\n                                    return _context2.abrupt(\"return\", newSession);\n                                case 23:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }, _callee2);\n                    }))();\n                }\n            };\n        }\n    }[\"SessionProvider.useMemo[value]\"], [\n        session,\n        loading\n    ]);\n    return(// @ts-expect-error\n    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SessionContext.Provider, {\n        value: value,\n        children: children\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react.js\n");

/***/ })

};
;