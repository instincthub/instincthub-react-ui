"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hastscript";
exports.ids = ["vendor-chunks/hastscript"];
exports.modules = {

/***/ "(ssr)/./node_modules/hastscript/factory.js":
/*!********************************************!*\
  !*** ./node_modules/hastscript/factory.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar find = __webpack_require__(/*! property-information/find */ \"(ssr)/./node_modules/property-information/find.js\");\nvar normalize = __webpack_require__(/*! property-information/normalize */ \"(ssr)/./node_modules/property-information/normalize.js\");\nvar parseSelector = __webpack_require__(/*! hast-util-parse-selector */ \"(ssr)/./node_modules/hast-util-parse-selector/index.js\");\nvar spaces = (__webpack_require__(/*! space-separated-tokens */ \"(ssr)/./node_modules/space-separated-tokens/index.js\").parse);\nvar commas = (__webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\").parse);\nmodule.exports = factory;\nvar own = {}.hasOwnProperty;\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null;\n  return h;\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName);\n    var children = Array.prototype.slice.call(arguments, 2);\n    var name = node.tagName.toLowerCase();\n    var property;\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name;\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties);\n      properties = null;\n    }\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property]);\n      }\n    }\n    addChild(node.children, children);\n    if (node.tagName === 'template') {\n      node.content = {\n        type: 'root',\n        children: node.children\n      };\n      node.children = [];\n    }\n    return node;\n  }\n  function addProperty(properties, key, value) {\n    var info;\n    var property;\n    var result;\n\n    // Ignore nullish and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return;\n    }\n    info = find(schema, key);\n    property = info.property;\n    result = value;\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result);\n      } else if (info.commaSeparated) {\n        result = commas(result);\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '));\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result);\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result);\n    }\n    properties[property] = parsePrimitives(info, property, result);\n  }\n}\nfunction isChildren(value, node) {\n  return typeof value === 'string' || 'length' in value || isNode(node.tagName, value);\n}\nfunction isNode(tagName, value) {\n  var type = value.type;\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false;\n  }\n  if (_typeof(value.children) === 'object' && 'length' in value.children) {\n    return true;\n  }\n  type = type.toLowerCase();\n  if (tagName === 'button') {\n    return type !== 'menu' && type !== 'submit' && type !== 'reset' && type !== 'button';\n  }\n  return 'value' in value;\n}\nfunction addChild(nodes, value) {\n  var index;\n  var length;\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({\n      type: 'text',\n      value: String(value)\n    });\n    return;\n  }\n  if (_typeof(value) === 'object' && 'length' in value) {\n    index = -1;\n    length = value.length;\n    while (++index < length) {\n      addChild(nodes, value[index]);\n    }\n    return;\n  }\n  if (_typeof(value) !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`');\n  }\n  nodes.push(value);\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index;\n  var length;\n  var result;\n  if (_typeof(value) !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value);\n  }\n  length = value.length;\n  index = -1;\n  result = [];\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index]);\n  }\n  return result;\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value;\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result);\n    }\n  } else if (info[\"boolean\"] || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (typeof result === 'string' && (result === '' || normalize(value) === normalize(name))) {\n      result = true;\n    }\n  }\n  return result;\n}\nfunction style(value) {\n  var result = [];\n  var key;\n  for (key in value) {\n    result.push([key, value[key]].join(': '));\n  }\n  return result.join('; ');\n}\nfunction createAdjustMap(values) {\n  var length = values.length;\n  var index = -1;\n  var result = {};\n  var value;\n  while (++index < length) {\n    value = values[index];\n    result[value.toLowerCase()] = value;\n  }\n  return result;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hastscript/factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hastscript/html.js":
/*!*****************************************!*\
  !*** ./node_modules/hastscript/html.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar schema = __webpack_require__(/*! property-information/html */ \"(ssr)/./node_modules/property-information/html.js\");\nvar factory = __webpack_require__(/*! ./factory */ \"(ssr)/./node_modules/hastscript/factory.js\");\nvar html = factory(schema, 'div');\nhtml.displayName = 'html';\nmodule.exports = html;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdHNjcmlwdC9odG1sLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLElBQUlBLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQyxvRkFBMkIsQ0FBQztBQUNqRCxJQUFJQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsNkRBQVcsQ0FBQztBQUVsQyxJQUFJRSxJQUFJLEdBQUdELE9BQU8sQ0FBQ0YsTUFBTSxFQUFFLEtBQUssQ0FBQztBQUNqQ0csSUFBSSxDQUFDQyxXQUFXLEdBQUcsTUFBTTtBQUV6QkMsTUFBTSxDQUFDQyxPQUFPLEdBQUdILElBQUkiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaW5zdGluY3RodWJcXGNvZGVfcHJvamVjdHNcXG5wbVxcaW5zdGluY3RodWItcmVhY3QtdWlcXG5vZGVfbW9kdWxlc1xcaGFzdHNjcmlwdFxcaHRtbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxudmFyIHNjaGVtYSA9IHJlcXVpcmUoJ3Byb3BlcnR5LWluZm9ybWF0aW9uL2h0bWwnKVxudmFyIGZhY3RvcnkgPSByZXF1aXJlKCcuL2ZhY3RvcnknKVxuXG52YXIgaHRtbCA9IGZhY3Rvcnkoc2NoZW1hLCAnZGl2Jylcbmh0bWwuZGlzcGxheU5hbWUgPSAnaHRtbCdcblxubW9kdWxlLmV4cG9ydHMgPSBodG1sXG4iXSwibmFtZXMiOlsic2NoZW1hIiwicmVxdWlyZSIsImZhY3RvcnkiLCJodG1sIiwiZGlzcGxheU5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hastscript/html.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hastscript/index.js":
/*!******************************************!*\
  !*** ./node_modules/hastscript/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = __webpack_require__(/*! ./html */ \"(ssr)/./node_modules/hastscript/html.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdHNjcmlwdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWkEsNkZBQWtDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGluc3RpbmN0aHViXFxjb2RlX3Byb2plY3RzXFxucG1cXGluc3RpbmN0aHViLXJlYWN0LXVpXFxub2RlX21vZHVsZXNcXGhhc3RzY3JpcHRcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vaHRtbCcpXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hastscript/index.js\n");

/***/ })

};
;