"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/prosemirror-dropcursor";
exports.ids = ["vendor-chunks/prosemirror-dropcursor"];
exports.modules = {

/***/ "(ssr)/./node_modules/prosemirror-dropcursor/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/prosemirror-dropcursor/dist/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dropCursor: () => (/* binding */ dropCursor)\n/* harmony export */ });\n/* harmony import */ var prosemirror_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prosemirror-state */ \"(ssr)/./node_modules/prosemirror-state/dist/index.js\");\n/* harmony import */ var prosemirror_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prosemirror-transform */ \"(ssr)/./node_modules/prosemirror-transform/dist/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new prosemirror_state__WEBPACK_IMPORTED_MODULE_0__.Plugin({\n    view: function view(editorView) {\n      return new DropCursorView(editorView, options);\n    }\n  });\n}\nvar DropCursorView = /*#__PURE__*/function () {\n  function DropCursorView(editorView, options) {\n    var _this = this;\n    _classCallCheck(this, DropCursorView);\n    var _a;\n    this.editorView = editorView;\n    this.cursorPos = null;\n    this.element = null;\n    this.timeout = -1;\n    this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n    this.color = options.color === false ? undefined : options.color || \"black\";\n    this[\"class\"] = options[\"class\"];\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(function (name) {\n      var handler = function handler(e) {\n        _this[name](e);\n      };\n      editorView.dom.addEventListener(name, handler);\n      return {\n        name: name,\n        handler: handler\n      };\n    });\n  }\n  return _createClass(DropCursorView, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n      this.handlers.forEach(function (_ref) {\n        var name = _ref.name,\n          handler = _ref.handler;\n        return _this2.editorView.dom.removeEventListener(name, handler);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(editorView, prevState) {\n      if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n        if (this.cursorPos > editorView.state.doc.content.size) this.setCursor(null);else this.updateOverlay();\n      }\n    }\n  }, {\n    key: \"setCursor\",\n    value: function setCursor(pos) {\n      if (pos == this.cursorPos) return;\n      this.cursorPos = pos;\n      if (pos == null) {\n        this.element.parentNode.removeChild(this.element);\n        this.element = null;\n      } else {\n        this.updateOverlay();\n      }\n    }\n  }, {\n    key: \"updateOverlay\",\n    value: function updateOverlay() {\n      var $pos = this.editorView.state.doc.resolve(this.cursorPos);\n      var isBlock = !$pos.parent.inlineContent,\n        rect;\n      if (isBlock) {\n        var before = $pos.nodeBefore,\n          after = $pos.nodeAfter;\n        if (before || after) {\n          var node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n          if (node) {\n            var nodeRect = node.getBoundingClientRect();\n            var top = before ? nodeRect.bottom : nodeRect.top;\n            if (before && after) top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n            rect = {\n              left: nodeRect.left,\n              right: nodeRect.right,\n              top: top - this.width / 2,\n              bottom: top + this.width / 2\n            };\n          }\n        }\n      }\n      if (!rect) {\n        var coords = this.editorView.coordsAtPos(this.cursorPos);\n        rect = {\n          left: coords.left - this.width / 2,\n          right: coords.left + this.width / 2,\n          top: coords.top,\n          bottom: coords.bottom\n        };\n      }\n      var parent = this.editorView.dom.offsetParent;\n      if (!this.element) {\n        this.element = parent.appendChild(document.createElement(\"div\"));\n        if (this[\"class\"]) this.element.className = this[\"class\"];\n        this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n        if (this.color) {\n          this.element.style.backgroundColor = this.color;\n        }\n      }\n      this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n      this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n      var parentLeft, parentTop;\n      if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n        parentLeft = -pageXOffset;\n        parentTop = -pageYOffset;\n      } else {\n        var _rect = parent.getBoundingClientRect();\n        parentLeft = _rect.left - parent.scrollLeft;\n        parentTop = _rect.top - parent.scrollTop;\n      }\n      this.element.style.left = rect.left - parentLeft + \"px\";\n      this.element.style.top = rect.top - parentTop + \"px\";\n      this.element.style.width = rect.right - rect.left + \"px\";\n      this.element.style.height = rect.bottom - rect.top + \"px\";\n    }\n  }, {\n    key: \"scheduleRemoval\",\n    value: function scheduleRemoval(timeout) {\n      var _this3 = this;\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        return _this3.setCursor(null);\n      }, timeout);\n    }\n  }, {\n    key: \"dragover\",\n    value: function dragover(event) {\n      if (!this.editorView.editable) return;\n      var pos = this.editorView.posAtCoords({\n        left: event.clientX,\n        top: event.clientY\n      });\n      var node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n      var disableDropCursor = node && node.type.spec.disableDropCursor;\n      var disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n      if (pos && !disabled) {\n        var target = pos.pos;\n        if (this.editorView.dragging && this.editorView.dragging.slice) {\n          var point = (0,prosemirror_transform__WEBPACK_IMPORTED_MODULE_1__.dropPoint)(this.editorView.state.doc, target, this.editorView.dragging.slice);\n          if (point != null) target = point;\n        }\n        this.setCursor(target);\n        this.scheduleRemoval(5000);\n      }\n    }\n  }, {\n    key: \"dragend\",\n    value: function dragend() {\n      this.scheduleRemoval(20);\n    }\n  }, {\n    key: \"drop\",\n    value: function drop() {\n      this.scheduleRemoval(20);\n    }\n  }, {\n    key: \"dragleave\",\n    value: function dragleave(event) {\n      if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget)) this.setCursor(null);\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/prosemirror-dropcursor/dist/index.js\n");

/***/ })

};
;